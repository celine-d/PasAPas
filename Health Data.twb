<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook original-version='18.1' source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Health Data_jour' inline='true' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Health Data_jour' name='textscan.10hd0s10q2wskm15m9n6h1hbou0s'>
            <connection class='textscan' directory='D:/Documents/Documents Centrale/S9/MOS/3 - Visualisation interactive de données' filename='Health Data_jour.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.10hd0s10q2wskm15m9n6h1hbou0s' name='Health Data_jour.csv' table='[Health Data_jour#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR' separator=';'>
            <column datatype='datetime' date-parse-format='dd/MM/yyyy HH:mm|#|#|dd-MMM-yyyy HH:mm' name='Start' ordinal='0' />
            <column datatype='string' name='Finish' ordinal='1' />
            <column datatype='real' name='Active Calories (kcal)' ordinal='2' />
            <column datatype='real' name='Distance (km)' ordinal='3' />
            <column datatype='real' name='Flights Climbed (count)' ordinal='4' />
            <column datatype='real' name='Resting Calories (kcal)' ordinal='5' />
            <column datatype='real' name='Steps (count)' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Start</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finish</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Finish]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Finish</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Calories (kcal)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Active Calories (kcal)]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Active Calories (kcal)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance (km)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance (km)]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Distance (km)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flights Climbed (count)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flights Climbed (count)]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Flights Climbed (count)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Resting Calories (kcal)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Resting Calories (kcal)]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Resting Calories (kcal)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steps (count)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Steps (count)]</local-name>
            <parent-name>[Health Data_jour.csv]</parent-name>
            <remote-alias>Steps (count)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Saison' datatype='string' name='[Calculation_196751029623914496]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (Month([Start]) = 12 or Month([Start]) = 1 or Month([Start]) = 2) then &apos;4- Hiver&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 3 or Month([Start]) = 4 or Month([Start]) = 5) then &apos;1- Printemps&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 6 or Month([Start]) = 7 or Month([Start]) = 8) then &apos;2- Ete&apos;&#13;&#10;&#13;&#10;else &apos;3- Automne&apos; END' />
      </column>
      <column caption='Filtre_recommandation' datatype='integer' datatype-customized='true' name='[Calculation_694398789072707585]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INT(if (sum([Steps (count)])) &gt; 10000  then &apos;1&apos;&#13;&#10;&#13;&#10;else &apos;0&apos; end)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
      <column-instance column='[Start]' derivation='Day' name='[dy:Start:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_196751029623914496]' derivation='None' name='[none:Calculation_196751029623914496:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_694398789072707585]' derivation='User' name='[usr:Calculation_694398789072707585:nk]' pivot='key' type='ordinal' />
      <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.429008' measure-ordering='alphabetic' measure-percentage='0.570992' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[dy:Start:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Start:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2016</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2019</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2018</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_196751029623914496:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;1- Printemps&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Printemps&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;4- Hiver&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Hiver&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;2- Ete&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ete&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3- Automne&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Automne&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_694398789072707585:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Boxplot?'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Boxplot : distribution du nombre de pas en fonction du jour de la semaine </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Health Data_jour' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5ys4l0bjmv4817vjza00rezfwn'>
            <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Steps (count)]' role='measure' type='quantitative' />
            <column-instance column='[Steps (count)]' derivation='Sum' name='[sum:Steps (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start]' derivation='Day-Trunc' name='[tdy:Start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start]' derivation='Weekday' name='[wd:Start:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Start:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Start:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' />
              <lod column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[tdy:Start:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]</rows>
        <cols>([federated.0g5ys4l0bjmv4817vjza00rezfwn].[wd:Start:ok] / [federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Comparaison avec recommandations journalières'>
      <table>
        <view>
          <datasources>
            <datasource caption='Health Data_jour' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5ys4l0bjmv4817vjza00rezfwn'>
            <column caption='Filtre_recommandation' datatype='integer' datatype-customized='true' name='[Calculation_694398789072707585]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT(if (sum([Steps (count)])) &gt; 10000  then &apos;1&apos;&#13;&#10;&#13;&#10;else &apos;0&apos; end)' />
            </column>
            <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Steps (count)]' role='measure' type='quantitative' />
            <column-instance column='[Start]' derivation='None' name='[none:Start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Steps (count)]' derivation='Sum' name='[sum:Steps (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_694398789072707585]' derivation='User' name='[usr:Calculation_694398789072707585:nk]' pivot='key' type='ordinal' />
            <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Start:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Start:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Start:qk]' field-type='quantitative' max='#2019-02-06 16:02:55.076#' min='#2016-11-24 07:57:04.924#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]' field-type='quantitative' max='33178.280687003738' min='-1667.8690358851381' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[usr:Calculation_694398789072707585:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]</rows>
        <cols>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Start:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='ScatterPlot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt; : nombre de pas en fonction du jour de la semaine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Health Data_jour' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5ys4l0bjmv4817vjza00rezfwn'>
            <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Steps (count)]' role='measure' type='quantitative' />
            <column-instance column='[Start]' derivation='None' name='[none:Start:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Steps (count)]' derivation='Sum' name='[sum:Steps (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start]' derivation='Weekday' name='[wd:Start:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Start:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Start:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[wd:Start:ok]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' />
              <lod column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Start:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]</rows>
        <cols>([federated.0g5ys4l0bjmv4817vjza00rezfwn].[wd:Start:ok] / [federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='StackedBar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt; : Nombre de pas en fonction de la saison</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Health Data_jour' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5ys4l0bjmv4817vjza00rezfwn'>
            <column caption='Saison' datatype='string' name='[Calculation_196751029623914496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (Month([Start]) = 12 or Month([Start]) = 1 or Month([Start]) = 2) then &apos;4- Hiver&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 3 or Month([Start]) = 4 or Month([Start]) = 5) then &apos;1- Printemps&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 6 or Month([Start]) = 7 or Month([Start]) = 8) then &apos;2- Ete&apos;&#13;&#10;&#13;&#10;else &apos;3- Automne&apos; END' />
            </column>
            <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Steps (count)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_196751029623914496]' derivation='None' name='[none:Calculation_196751029623914496:nk]' pivot='key' type='nominal' />
            <column-instance column='[Steps (count)]' derivation='Sum' name='[sum:Steps (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Start:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Start:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]</rows>
        <cols>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='StackedBar %'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt; : Nombre de pas en fonction de la saison (pourcentage par rapport au total de l&apos;année)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Health Data_jour' name='federated.0g5ys4l0bjmv4817vjza00rezfwn' />
          </datasources>
          <datasource-dependencies datasource='federated.0g5ys4l0bjmv4817vjza00rezfwn'>
            <column caption='Saison' datatype='string' name='[Calculation_196751029623914496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (Month([Start]) = 12 or Month([Start]) = 1 or Month([Start]) = 2) then &apos;4- Hiver&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 3 or Month([Start]) = 4 or Month([Start]) = 5) then &apos;1- Printemps&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([Start]) = 6 or Month([Start]) = 7 or Month([Start]) = 8) then &apos;2- Ete&apos;&#13;&#10;&#13;&#10;else &apos;3- Automne&apos; END' />
            </column>
            <column datatype='datetime' name='[Start]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Steps (count)]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_196751029623914496]' derivation='None' name='[none:Calculation_196751029623914496:nk]' pivot='key' type='nominal' />
            <column-instance column='[Steps (count)]' derivation='Sum' name='[pcto:sum:Steps (count):qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Steps (count)]' derivation='Sum' name='[sum:Steps (count):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start]' derivation='Year' name='[yr:Start:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Start:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Start:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]' />
              <tooltip column='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[sum:Steps (count):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[pcto:sum:Steps (count):qk:3]</rows>
        <cols>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='ScatterPlot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Jour:nk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Start:nk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[tyr:Start:qk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[wd:Start:ok]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='StackedBar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='StackedBar %'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Calculation_196751029623914496:nk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Comparaison avec recommandations journalières'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0g5ys4l0bjmv4817vjza00rezfwn].[usr:Calculation_694398789072707585:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[none:Start:qk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[usr:Calculation_694398789072707585:nk]</field>
            <field>[federated.0g5ys4l0bjmv4817vjza00rezfwn].[yr:Start:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot?' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXwc53nn+a2qvg+gcZ8EQQIgwZsSKYqSrPu2bFl2vHLsyUzmY2ucZJPs
      zu4ks0fy2fU4k3h285lPZnYyk3ziI07iSeJYlh3bkaVEsizrskTxAi8Q99U4utE3+qzj3T8a
      aAASCLK7AXST6O8/1U1WvfVDdT1V7/u8z/O8khBCUKHCNkUutYAKFUpJxQAqbGsqBlChaGKB
      GX7499/nXP8oC4FpRr3BtXcUBhcuXtpacddBqowBKhTLn//XP6T3rseRgeCV1/jHC1G+8Ny/
      ZPzCWzhaD3C41cbQTIBYOMhff/t7PPH0L/LpTzxcFk/fctBQ4SbnnrtP8uJ3/5ap+TjdPXs4
      dvdD7G6txeVy8/3vf4+gd4BX3x/m2ImT7Ondx2MPnEAqtehFKgZQoWh0k4tf+/XfYOj9N7G4
      3KSScULT/YzPJql12wGFe+6/n5rqKmySQUrVSy05R8UAKhSNYqR4+aWXefST/wPt3bfTIPkJ
      00B9tZmTd99NXXsPnY1VICk8+cjdvPPeecql370lY4BkMonVakWWy8PeEokEDoej1DJyVPSs
      z2bq2ZI7UlVV8rIzNcLoVOi6u/kmR4lrOsFAOC89mUwmr/3zYXp8nJSmEgxHykLPB/GOjqFq
      SQKRxIbpSSciROPXOybJ2Ogs4UCQfDtAG3V9xkbHPvRvpg1peaMxMizEdWbn5mhuasI75cVm
      0pkLLqDYXPR0NDNw9Sq+mTmONHegquqmSfHPTjEfiqLpIAmVxh09mDIhpmbmaenoRqRjhEN+
      Wjv34h25ysSkj3taW8io2oacP+ibZnY+jG4IZKFR39aF1Ygx7vWxs7uXVCxAeD5ER3cnIwND
      VNW3YiZDKBSmc2c7Q8Nj1LV00OyxcuXqEP7ZMPU7GlBVY0P0ARhqBlW24fOOMxOI0dPbSywY
      pMoOScWDFplhLugjo9XisEsbOAAWTHmnaW9tZnpmHrOUZtofoXvPPvyTQ8RTaWpbd1FjNRgY
      mSAQTlBbbWM+FMdR08iCb7y8xwA+vx+A6ZkZwqEArZ17SC6EmR4bora9m52tjYCB3x/YNA2B
      YIgdu3pQ1ST79u9hbmISq82OJAmuXO1nanQAZ8MOYt4h3O09dLY3gaHhC1z/DXYjhMIhWnd2
      oakpevfvxTc1ydDIFPv27WV44CpjQ/3UtnUwPjBAZ+8B2ppqGey/TOvOLoYHBtm9dx9zk6MM
      DAyya+9+WhtrQE/iD8Q3RB9AOjZPKJZibNpHb3cLAwPj+H1+UlE/wWic6fkYBw70YlFk5v1+
      Ns70JPxzcywEZljQZUYnZ+jtbmdwcIxwNEnv/oP4p8cYHB6l98BB6qudRP1TRA07VbqPuLmx
      vA1ACANdU1FVHUlWMJtMyLKMIQxkSdrUJ38OWcGsKJjNFhRFRpIE/f1D7Nnbi8Nqwuaqpbne
      gzAMZHkTNEkyZkXBtHR+YCESoP/qIG5PLU5PA401bhRFxjAEQghqGlrwuGxomThX+/sxWZ0Y
      wkCCTb1mIf8MA8NePDUuDMMgnVERAoQQGJqGsQnDzfY6J6cHZ2lvriM8P8vA8CTVNW5MZjOK
      oiBL2fNLCFRNQzZZ2NHWigRMjg6ifOlLX/rShqv6AOl0GovFkscgWEJSzHhsMDo1S3VNLXU1
      HuwOJyZFoqm5mYnhQQyzg4b6OsyyjNN544OkVCqFzWa7MSWShN3hQJElnE4nkqTgdprxzgWp
      qa2jusqNw+nEVV3F5PAghmKjsakek2LC6bAXrUeSJGx2ByZFzp2/va2RSDROTX0Dbqcdp9OJ
      p8bD6OAAqmSh2uXE6XRSV1dLOBTGVVXDrh0tDA4MYXFUUV9Xg6yYcTosRV8fgGR0npRcTWeL
      h1g8TX1jE1Y5TWghTWNzG3ZSTPsj1NY1UOV24HA68+oGrafH5nSjqhrNDbV43C6i8RT1DY04
      7dbF6yXRXF/DwNAYzioPdbUerHYnNpcHsxbfGi9QNBpF07Sy8QLF43GcTmepZeS42fUshIPI
      jmocFqUs9OTDlg2Cq6urUZTNuUCF4PF4Si1hFTeznq3QvlnnKI9HcoUKJaJiABW2NRUDqLCt
      qRhAhW1NxQAqbGsqBlBhW1MxgArbmooBVNjWVAygwramYgAVtjUVA6iwrakYQIVtTcEGkIiF
      GBoaJp7KIISBd2KUSDyFYagkEmmEniESu3baXYUK5UDhBpBSaWlu4NzZc4z196Faqui/cI50
      OsLEZID+C33oUnlmXFYoPcIwCP3lXzH35X+PvrBQMh0F36FVDgvnLlzAVdNKID7P8X11pP2T
      JFSNkctnad9/iFqXBV3XMQwDXdfzS4zfRHRdR9M2Jmd3I9iOeoSmkThzBn3OR2Z2DnPntRNw
      NlNPwQZgdlRz7PgdnD59HrNJIq0LVN3AIivs2nOAWGgO1diBWVGQZRlFUcomH0BRFEym8nk7
      bUs9ikLjb/0b9FAYa9duJOnaOWKbqafgVof6L5BUBZ6GZjqb3PSdO4Ozuh671UZ1jYldHS6m
      vPPs2tGwkXor3CpIEub2dszt7SWVUbAB9Ow7vOr78WPHcp9bW7PbXe5CW69QYWuouEErbGsq
      BlBhW1MxgArbmooBVNjWVAygwramYgAVtjUVA6iwrakYQIVtTcUAKmxrKgZQYVtTMYAK25qK
      AVTY1txSBqDNzeH7yn9g4fWflVpKhZuEW8oA0gMDpM73kXjzzVJLqXCTUD5ZGBuA/c47qTUE
      1j17Si2lwk3CLWUAssWC6/77Si2jwk3ELdUFqlAhXyoGsIloc3PM//F/JXXxYqmlVLgGt1QX
      qNxIvHeKxJtvIVQN28GDpZZTYQ0KNoDxoSuE42kSGYn9LRben0jSUldN104PY+MZXKYgqrON
      zubyWv1wK3E++ABC03CcuKPUUipcg4INYGf3PurD81wc9hKNZXDZTdjsDmQEPu8Y8YZabtvt
      wTCM7ErhhrGRuotiqU7RpmO343r64wDrnm/L9Nwg20lPwQbgnxphbD7J7UcOYTbJtAvBhTPv
      E6/pwGqzoqkZgFy9F0mS1q39spWUkxao6Lkem6mnYAO43D+Ap7GVkfFJqq06c4EYCV3BZjZT
      29iGx77A0KSPno7G3B9QLivFl5MWqOi5Hpupp2ADuP+RJ1Z9b15R36i7G6CJ+kIbr1Bhiygf
      M69QoQRUDKDCtqZiABW2NRUDqLCtqRhAhW1NxQAqbGsqBlBhW1MxgArbmooBVNjWVAzgJkAI
      A31+CKGrpZZyy1ExgJsA9fy3SfzVM6Tf/KNSS7nlqBjATYDsakJy1CNXtZVayi1HJSPsJkDp
      ehBnx51gtpdayi1HxQBuAiRJAouz1DJuSSpdoAp5o8+cJ/nDf40+e6HUUoqmYgCbiRCIxZTQ
      Wwm1/0W0oVdQB14qtZSiuaUMQI9ECf3FX5K6UB5lSFL9V5n+1/8LC//0SqmlbCiWOz6P9b7f
      xnLsX5ZaStHcUmOA5LmzxH78EpnxCWyHSl+GRPV60X1+MiOjpZayociuJizHfrnUMoomHA4X
      bgBLlR4kWUaCVZ+X9wFZ3rrkavvtt1P1iaexHT26ZedcD9eDD2Bua8Wyc2eppVRYg3g8XrgB
      TAxfJZpSiSV0upudjPoX0DWDY0c6GR3P4JQDiKoddDRVb6TmdVFcLqqe/jiSzbZl51wPSVGw
      7dtXahkVrkFbW1sxdYF6iQXnuDzmY8If5sSxO7jad45ERmN2fJDq1maONlbn6gJtRZ2ZzNUB
      Av/5/8Nxz91U/7PPXXO/7VT3phC2So86MooeCGA9djvSOlUfyrIu0NzEEJNhjWNHDtB37ky2
      S4RAkiTcnhrUVAqx+H2prMVml9oQySTGwgJGOLzuubZT2Y9C2Cw9w8PDvPrqq0C2C5069T76
      wgKOk3ciOxwAdHd389BDD22JHijCAAaGRqiub2Z4bJKuHU289/4ZzGYbTosZT30TNfY4w5N+
      ejoaga0ptuS4/TZa/uMfYqqtW/dc26nwUyFslp7u7m66szVzEEIQbWjkzKVL3P8rv5IzgK3U
      A0UYwL0PPbbq+8nGHbnPXbuz29pCGy8UScLc3LzVZ61QAJIk4XrsMZx1tcj24kI8RHoBoaeR
      7bWQp6Fc0wB0Lc2F06cYmZrDYndx9PgJ2ho8ZfWkqpAfWiBI/Kc/xfmRezA1NZVUi9A0fP/u
      y4TmZsl0dmLp7CywnQyJ7z6HEZ7A+c+/h+zO7+9as2NlpMJ8++9ewHA08uTHPsY9dxzm8qnX
      efPMlYJEVigPFl5+mch3nif6o38otRQAJKsFFBMoShGNgGS2IZlsUMA4Yc03gGRx85nP/iLv
      vPk6QupCUmPUdR/naHdL4UIrlJ7c27v0b3HJZKLxd3+H2tOnsbS3X/+Aa7WjWLA/8yegq0hW
      d97Hr20AssKFt/+Rr371L9j71ikysXke/Mz/iFKMpW5HhEDoOihKWXQdzW2tq7alRrbbs/3/
      Iq+NZLYXHCp+zTHA0bsf49d0E9WNHVjNMjUNDQUL3E74/f6cz1qdmCD0l3+F+9FHsN95Z26f
      hoaGkjxM1Clvduv1bvm5y5V1vUADF05jbU3gsZvpsVVR4762q6pClrNnz5JMJgFQJycZ8fno
      OHeelc+nxx9/vCQG4Lj3I+jhCM4H7t/yc5cr6xpAndvBbEql2mbiFovo3TQee2zZPSx0nXc7
      Oznx8MNFu/o2AnNLC64nHsOyY8f1d94mrGsAJx//FOFYAoDaqsrTP18kRcHc0lLSm/+ll17K
      dcnSg4Mk3vk59uPHsO3fn9vnySefLKuZ6K1kXQMY6T/P2f4J5qcnuOuZz/Pg0d1bpavCBnHo
      0KFcQk7aZuPMpcscOXAQ2+FDuX3KYYBeKtY1gEPH72XPEY2xM6/QH4xtlaYKG0hb23IlCdHW
      RsjhoOvkybK46YVhIAwjGzdfIj3XGQSf4r3zV1Ec1Tz18Z6t0lRhk0ieep/gn3+ThKrhvO/e
      kmoRhkHgT/6U8MAgek8Piqc0y+mu2/HTElESwkRkZhxfOLFVmipsEurMNEYkUh5uUMNAHR1D
      8/vQY6XrXaz7BrjUP8TjT/8yqauvcWV0moM7K8ve3cxUPfUUHpOJ6kcfLbUUJEWh8Xf+D2pP
      n8FcxExwsaz7Bnjm2c/w85e/R59P4aN3H9gqTRU2CclkwtzcjGSxlFoKSBJKTQ1KTWkDLNc1
      gJ++8hqPf/qXuK+3lrf7bq3E7goV4DoGYBIJfvLaz3j97fcwmW6pAhIVKgDXGAOITIKoZuKJ
      Zz9P/8ULyIc+y55dbYQjETzVW5fkXqHCZrP2G0CC11/6IRf6R3BU12BXNH7y0j8wNhveYnkV
      bmWMRBIjkaSUcTZrh0ObHTz9qV9AGAaqpiHLCjs6OlfNVQgh0DUNxWwGQyeVzoAkY7OaMYxs
      boJuCExbGPRlxONEX/wx9iNHsO6pzFuUM0LX8f3+HxCcnEDt6sLcWppck3U79sl4DMlsZWrS
      S/vOnVhMyy8M3/Q4fZfHefDR+1mY6ufivExrnYv2Jgcj4xnskh+lZhftDfknKeTDCy+8wPz8
      PACaz0ek7wKOn76G/ciR3D6f/vSnqa3d8gzlCuuh62g+HyKdRg8Fy9MAnv/vf0FjSx2nL45z
      4P5neOYjywFUTW2dtAcXAIinwCJnyGgGIJgavkJ9ZwdH6t0YhpGr67IZRWKffvrp3Gc9EuGt
      r36NE48+iu3I4VX7aZqW+2wYxqrvm4mu69c917bUI8u4P/MstgsXUHbtWvd8m6lnXQPY0VLL
      P7wzwMcfPELGbr3mfq09+2kFLp07TaLRTkNzC6n4Qq4ukCzLKIqy6RGHSm0tVY88jPP229bd
      b0nPVnAj59qWeoRAn5xEn51F1nRk+7XPt5l61jWAux7+GJrlDUy1O7nnttWRoN6xIbwz02gW
      O/VOGV8gSkZYsFvMVNXUs9ORYGTST/diXSDYmqjDG60hs1WTLxU9ayN0nVRfH+rsLHowiFK1
      fle5JHWBXvjv36D12GME+1/nZd3KUyf35v6vrbObts7u3PeWFbPZu3Zlt6UJb6pwMyApCg2/
      /Vt4zpzBvLOjZDrW7ZM4bRZGhwYIReOceed1Tl8a2ipdFW51JAlzayvmlpbyDYU4cd9DJObG
      cbfs5ZEH72Vna+N6u1eocOMIQXpwiPTQcDYnoESsawCvvPwyJ+44TEZPM+JLUl9TtVW6bgky
      E5NEvvM8ifdOlVpK2SFUFf//+4dEX/ge6SulK7i2rgEcObiPn7z2Bj9//zK37Sv/RR70hQXi
      b71N+urVUksBIP7GG2RGR4n9+MellgJkbzp1ehojnS61FFAUZHd24KtUl260uO4gOG2p5jd/
      63dQQ5OMxzNbpalgkqdPk3jrLcLhCE3/1++WWs7yFL9RHiU1ov/wIuG/+RsisQVqPvfZ0ooR
      YnEJIQmhb80cyFpc0wD6fv4T/tuffpN9h24nHZ7hrk/+yqaJMKIzpF79MqauB7EcfrbgduxH
      j2K/4w6qHnvs+jtvAebWbAU2U5lUYjO3tyF7arB0lL4siqQoNPzbRS9QR+m8QNc0gAPH7+OL
      XzRz4PAxZARO5+aVRdHnLqKPvQHpWFEGoFRV4bz3I9gOlkfyjvPBB6jJZKh96MFSSwHAfuwY
      tULgOH681FKyXqCWlmyCTjl6gS68+RKWxh7+6flv8if/7Y/pG5vfNBGmXfdhe+IrWB/9clHt
      pIeGCX7jz4n83Xc2SFlxSIDssBdX/XgDUScmib30Mpnh4VJL2TiEQJ+7jDb2Vt6hNl6v99oG
      MOn1YsTn6JsRfObR2+gbGC9a67WQFAtKy1HkquK6CtrsLEY4XDY/cOLU+wS/9g0iz3+31FIA
      SLz1FumLF4m//rNSS0EYBqG/+Esiz38XPRotvB0tRfKH/zPJ7/8aIpRf1mJVVdW1u0APPPYk
      3/q7H/JL/+KzRKf6OHmoq2CR10ObfJfk934VU+dHsH/ij4tsrfjXqT53idRL/yfmI5/BcvTa
      i+1dD2NhAZFOoUciRWvaCFxPPI4zHKLq4x8ryfn9fj9XFl2eQtOIXblCzND56Y9fwtySXdmn
      sbGR3t7eG29UsWDqfgQjNIbkyn91oGsagLuhg1/79V/Pfml7IO+G80GyuJDstQX9AStx3HkC
      9/g4NY88XFQ7xvwgRnAYfeo0FGMA8fjitjxKyphqa3HceSemxtJMaDqdTnYtxskIIUirGkY8
      ju3QQeTFpW0d66wVthaSrGB74H8rWFNZJPoqTQdw/vLfF1zjfQnJYsG2r7fodcJMvU9hdzUi
      N+TxJFoD+9EjSC+8gOOOY0W1s1EIw0APhRC6jlQO4xLDAFG6WWC4zkTYliFJSFY3klwW9oik
      mDHtvBvZUVwSTfJ8HyKRIPn+6Q1SVhyxF39M8GtfJ/LC90otZRFBqVerKY877hbF3NYGSCUt
      /LQSIx4HITAWFkotBUmSsO7bB4aBZDaXTEfFADaYixcvoqoqAAs/+xmTwsB66hSeruV8ioMH
      D2IuwY8uUulV21IjKUrJXcS3lgEIgVBVhGEglajefU1NTS59z33iTuqbmlHq6rCuyEkuVS1+
      U2sLktlSNmuElQO3lAGkB4eyE2GjY3g++4sl0bCUAgqg2G3okoRit5XFAhSuhx+iOpPB/Xh5
      hIqUA6X/VTYQPRTCiETLo/oxwOLKLELTSywky8KrrxL5228Te/HFUkspG24pA9ACAUCgzW9e
      2EY+SDYbmEzIefq2NwttzofIpFFn50otBQAjlUKPLWxKtZAbpeAuUNDn5eLVSe6+9yTpwAwX
      R6exWJ0c3NuCd0al2rpATKqho2nrSima21qRbHYsS0nJJcZIJEDTMOKl97oAVD/zCdxC4Hn6
      46WWgjAM0lf6EckktiOHkZzOkugo+A3g9jRQ73EBMDA2xbFjt2MxEiTSaRLRCEPeCO2NW5tB
      Zj98mNovPkftFz6/pee9FqbGRqz792Pp7Cy1FAAyU1Ok+vrIjI0V1Y4RmyVz6hsYC77CG5Ek
      ZLcbyeksabn2gt8AZoslN4VhIKFIEoosowuD8ZFBmrq7kZDQdX1TC2OtRI/GWHjn58RdbmwH
      9l97vxsoDlUoS4XAlpCq3AhYlfeqadqqa7GZekKhUO5z7M23iExMMP2zN6hqXfYEeTyra/Rf
      T0/mva+j9/0N2oIfy73/5oa1LN0LS5jaWrNeO0XJXZ+1imBt1vUxDKOILpB/ljmfD/v0LK21
      LvquDJBM6nSaTezqPYJdmmd8NkhnS22usNFmF1tKnn6f9KlTLIQjuI5cO7RaUZRNK/cuy3Lu
      5jaSSdSJSUxNjavWwDKZTKuuxWbqGRkZWV65vsqN58EHmaquwjw4mNvn5MmTq7xU19Mj7f84
      mVQQy/6PoeShe2VxNGEYpPuv5rpA8mIXSJblD517XT1CoM9dRCQCKLvuzyu3QJblwg3A7nBx
      9NjtyIoJd0sTVfEYZutuzCaZ7i6BSWkio26t90Px1IAko9SVRx1QPRhCDwQASrYIXFtb2/Iy
      qckUugC5xoNtxWLZ+SakKC2HsT/1H4sTJknIVW4MWc67C3T16lVef/317BdhoA7+EyIdw9x7
      Hmkxnqy3t5f77rvvum0VbgBOFytD15yu5f7+krFaLJvvZIpEIrknnOZ0kHI5Sba2EgwGc/tU
      VVWVZIGPpQWypTJYJR4AOXujl2qScCWSJGHtKizEfu/evezdmy3SJrQ0ieff4NxIgrv+xbPI
      7vyK7N70E2Hj4+PEF8OO9UCA6uPHGc2ksayoDHHkyJGSGICRWQw9yJRH6IG5pQUMA1NLaSox
      bwaSyYrjU1/FeuYs8kbmA9wsNDY25mJvVEVBjSeQnE7sKwLQSrW8k6muDj0YxNTUVFQ7RiKI
      evEFzHseQ/YUnkAudB2RzsAWVaJeV4sQqBOTGIk41p4epCJ+I8niQDLbClpsu/Tvwg1EtmaT
      KpaSK0qN5vNjhCNo09NFtaP2fZvMW/+J9M//tDg9fj9GLIbm8xfVzoZgGGizMxihMEa5rhN8
      s2Gkkqu2JUf60IeCMPU8hhEcwXzwU8W1U1+PHghgaiiD9Z4lKRsJqhuglO42vKUMADnrWpTk
      Msh2gtxrvZjXO4BS14X9o39YtB49EgFNRw9HUEq9Yo4kIdsdGFqspG/sW6oLxGKFsVJWGluJ
      kUis2paajfJK6fNDpH7y++jBkcIbESIbImIYGIl4UXqElkHoakGL7d1SbwDJal21LRQ9MET6
      ta9gPvAM5n2Fx83kbjhH6dygqVQqN8uanptDTyZR5+awevKL0fqzP/uz3Gd99gKxmQHcb/lQ
      mrJFyGRZ5rnnnrvxBiUJpdqDEY8j2QsPFhS6SvKH/xPpIR/Gwa/lncZaHgYgBGIxP7SYKmFK
      XR3Wg5bcjVco2tBP0CffBS1dlAEYuQysVFF6imFqcjIXfpDxTqPNzKCkU1hXGGVXd/d1r/sX
      v/jF3GcjOMp7P/pzTnz8C8g1hRVNliQJS083CFFcgr6WRJ8+hxEFER6Hm8UAwuFwzn0potOk
      XvkSpq4HMR9ZLtrq8XjySh0U8QSZoWFMjQ1F5eFajnwGDBVTV3ElDSXz4higyPRHIzJF5vQ3
      MR/4ZO6JWwimlmaMZCJXs7RQ5NpdmA98ouCbH7Ju0MzISLYsyr59hQfEmZ0o9T1IwWnkuvyW
      xhVClM4Azp8/T2AxTED39zPdF6fB+ya26PKN+8ADD+S1vKmRTiEWY8yLueUkWzXWu369oGO9
      U1OkF8uPq1NTqBOTKNEI1hU/cFNTU15xUeqVH6Ke/1tEJoH9iT8oSBeA7p/PumV9vqIiVI1E
      EG3iXcT+3Uj2msIaEQI9GARNx0gkUAo1AC2NEZlEZFIYsRkU640bQTQaLZ0B3H///bnPIhXl
      /W/Ncui+Z7DteajgNpem+EtZ8yaTyZDJZEvJZ5IptEwGOZlEyiyXl883Kta8/2l071ksR4sr
      aS67nEh2O7KruLWbM6e+RubMC2TqU1jv/V8La0SSsHR1IZJJ5KoiwubNdqz3/TaWC1eRa3df
      f/8PUBZjAH32AtrUKdQLalEGkKvEVgZlP2CxMC4UlBH26quv5rqI+twl1EtXMPm/jalzOd3z
      4YcfzquLqNTUYK8p8Im9AtPu+1Ear6Dsun6w2broBkLfgMJYWgqhp29eL5BQEyAMRCb/G3d2
      ZoaFxRtem50jMzaG7HZhq13+oWtra7GUIOliafBrJPMfBO/duzcX5GfU6vSN1LB/bw/K7n25
      ffINLxdCIDIZJIulKGeDpFiQTDYkJb9rqus6yeTiJKVhkLxyGaHpWC3mXLSsOd85EzVJ+u3/
      gjqZwnjk0yj1+Y0DysIAiiGjqrkuh4Ygk8mgICEX0eUoB9pXDOJFRwcBatl1x51IUuFTN9rs
      HOr4GOb2HZjb2wpuR736Etr0WdSBl1FaDt/wcYlEgqnJSSAbl5QcnwDDwOJ0YFoMh2hqaqI5
      n2A9sx1T530oyVHkms58/gygXCbC1OxTQahFhjAs3edlcsPnDK9IPZIkZZ+6Rdz8QHbCyRC5
      rmLJWcoOK2aVSDWBNvo6+vwgRgETc2VhAJLdA5KMVGQtTrRFt+pi37lghMCITmdnF4tgKThP
      KpPgPMmc7bIUm4Nr3v80po67ipojQZJyiSPFhorknnw36xhA9uxEdtSitBwprqGlfq2cf//2
      3Llzuf6pERwmc+rrmHbdh2nPE7l9brvtNmx53MzGYnsiWR7BeUsPBqEWt+ChZPMgueqRbEVU
      /BBi+clfzBvSZEWu7kDyzSBX59+tKwsD0GfOY8Tn0YZfg3sK87/DisTzAl6pdrs9l6+q+WOM
      xwQ9aT/WFeU6bmTguLCwkDMkNZVEy6SR02kyK1ZBKdWYZDk4r7iJuczpb6Je/iGZFlNRtfkL
      id+H7EIbIyPZ7o5QE6SHg3iTTpRXf4hcl80ya2hoYPfu67tFN8QAMjE/Zwe8uIvLZLkAABWB
      SURBVF1uenY3Ew7rVDs05hMmWhuu7+MV+uITSS9yKdYixgBLKXYAoqeDtPc8t33085jab3yQ
      B3Do8OGc9yb+5luc/dkb7L/9djwrFqbLtzCuEAKRCCIMragS8orbjSbLufV5C0d8YHtjpFIp
      ZmZmFg8VpJNJUFXMoRDyosfsRt6wDoeD1sXZbKGr6Hd9mg5DQ+k4mJuYc95AnaGikuJXMu/1
      0t69j2a3GUMNEQgkGB+d5dDtN7YwhKn9OHLtbsz78p8DWFkyQ0un0AwDKZ3BtCLrKd8nrjr4
      j+gz51BPfxNTe34rKrauCDOIWK2MAc2STMOOwpcm1S59j9Srf0RG7sd6z28W3I4eCoFhoIeC
      ReUEyIuuRqV+T17HtbW18Ylnnsl+MQx8v/f7XPR6ue+55zA1Z7Pm8s/eEyAWS1Aael6ZF62t
      rRtjAFXN7UxODzMSinHs6G6GL51lx6HbsJrkG6oLJExOpJrdGJ7OvOu/eDye3FMjOTBI/+XL
      7PJ48KwoACtJ0qp2r1dnRrjbARlRvbOoejRLQWiGEOu2cz09hmwBxYwwWfPWYwiR0yHX1oLf
      h1xbt6o+j6Zpq8qiXE+PHprIHhcaR8pTz9JvJTIqlnAIi65hTsSxrnjyX68u0Kr6QoZYMQZe
      rsm0Vn2htdiYLpBq0NWzl+SZU2gGdB04hhqdIhRvpMZpvW5dIHXiLfThV9DFZUy9j+Z17n37
      lieGot5pom++SW91NS233XbNY65X90b3X0IIA+b6isonNi/Oupo81eu2cz09yr6nsD3sxnrH
      R/JO9pElCZbGNtFI1g0aiWCur8vtYzKZ8qoLZLgasvu5Ggq+PkJRcJw8ieniRex79iDncX1W
      1RcScjYRytCQFXMuHGat+kJrsSFuUJfbwfDVK7Tu7sVlr6KlpZYDtx1Fu0Hvh+RuRlIsRSV8
      AyjV1au2hSJX70CSQKoubkX1JXdj0aX/hIFIhcEozi0rKRvjdtR9/au2hTWikzx3Hm1mBtVb
      XM700phPFLDe2Ia8ASw2F/sOHMx9X7r/GupvLDHFtONObI/9HrajdxSlQ6mrRbJaMRW5SB5q
      YvW2QDR/Nvlc9xdXrVo9/7ekXvsvpOUr2B743/M61hACfSkfYH6e6dFRWswmlB35hYvnBq9A
      OqoSUU34ohksi/8uSRLN+V53IRZv3mK8YotvOF0vyEFQMjfo+++/T2TF+rmpVIr5N99Z5Wo8
      fvw41fk8zQUFu9ZWYup6CKXlHzHf9ktFtbM0ASbZistQE4tFaEUBxWgfemjZsRCanuXdeJw7
      qmuoezS/rqZ3xZoLhuc4DcfamatqRV7897wNQIjcfITI5Of90zSN5GKaqdBVtIUYCAMlFkE2
      sh42yw162kpmADt27KBpsV6OMDSM0DiyvWbVbHA+k04A6vQ0IpUiM5b/qvbpdDo3SM+c+w4p
      bx+xN/4Y+yeXS5FYLJa8VnoxFn3/erS4sh8iGVy1LZQlQyzEIJtW1DYyHAJjNonc0oXsKqzm
      UTYwb3FiLk8DSMTjTE1NZY/VVbQpLwgdRWpFdiwGIBoGTTdgkGUxESaiM4j5AXSLC9Ouewtu
      x3nfvbi9U3k/3SA7E5xYSmKP2BB7nuY0TpR33sntc/LkSex5pFsu5SbLBdxwp0+fzoVDa1M6
      k0YTwmfD8vOf5/Y5fvx4XoPQpTyJYvMlRDoKhoZIx6BAA5AkKTs2SsSLHCPdpF2glUhWNyAt
      bgtHtlqxHTq0uDxpfnR0dOTcZkbIhOFLgqMO047u3D75TmAp1dlJwEISPpqbm3MuPV2+h7aO
      TrDXYFrxt+W77pj7qY9SpetUP/XRvPWswlgsemwUUX3DZMLzmWdx9PVh2V1YjVAg2+WVTaCr
      kGd4NpSJAYhMHBAF5QNsBmLphzWKq27tfOABPMkUNQ8XnuQDwGIUaLHRoLLdjrW7C9nlKk6P
      ll69LQQhUKem0Obmsl0ga4FvAWFkb36y0cRL1aFvlLKIBi0mmm91MwIjlULoxd240tJlKXJA
      Lcky5uamogs/yZ4dYKtGKiDefVNYmouQiuhK6Trxt94mMzKCOjVZcDOSYkKu3Z11pReQn1we
      BrBBsUCpK/2Evv4NQn/1raLaEYtT6xTgV94MRCYBmTiki3tDpgeHiHz3BVKXLm2MsGKeD5KE
      ZMl2KYup4yQMHSM8jojNQjp/Z0N5GEDuiVucHNXrxYjHyQwPF6lng95IG4RIzIOhYcSLK2q7
      8NOfkhkeZuGVV4tUJH1gW0xTUnHX2TByXTGh5Z96WrIxgN/nI7aYBqcHJzD8k2CyYrYsvw49
      Hg/WfJ4OYkV8SJ6oqrqchJ5OLbrmUhglSq2c9npzg3J9dhIjMoXkiGOSloPtWlpa8hoIux54
      ANOVK7gefnjD9eaLpCjU/+ZvUHXmbN6remYymeW1zwwdLWlk3aALSSQ1+++eG1yRp2QGkE6n
      c3HzejKZTR4xiVXhE0aecf2OEyew/OwNqj7xibz1THu9OTeo7h/HCI6B1Y1ZWg6HaGlpydsT
      VCipVGrZIFMZjGQSSc5gKiK5Rp2cRA8EyYyPYzuYX4Etv295Ek6fm8aI+pBTJhQpGxckSRI7
      8ol4lSSse/ZgjcXyXrGmobGRu++5B8gOfJPeP+XKnMptTz6bK43iuMFKHGXhBVpyfxbrBs2M
      jpIZHSXx7rs47sgvjHm1oEV/eTGDPLLVmONvvkWmrh5LZ+FV1BBLXqniiv5mRkYQqWRBXcRw
      OJz7rAWDiIUwkm7HZM/+ezFVJvLF4XDkbnCRirBgijFtNtFUZc579ZuyGAMsuT9FAYOYlUg2
      G7LNhlJswoexMTdc/GdvkHj7bSLf+35xeqQN8LqwvFCfUmRtIMlkXbUtKVY3ljuew7Trvrwq
      VCxRujHA/Dy+xdeqiPoxIimQNRTbcszJocP5/UGW3bux33Ec54MPFCduaUKlgImVlThOnsR2
      6RJVTz5enJ6lwWaRT1n3U09RLQyqP1rcRJjIlaEvsvjABiBJMtaTv4rFfBrJlL+7uWQG8PDD
      D+f6+NrVFznzne/T27WDqs/8P7l98u1vJ959l/hrPyU0H6Dpd38nr2MdTifyYoiANutjaOgs
      u3Y0Yz3wSG6ffGdeTQ31uB99BGtvb17HAaRXlFg0hIx/apz6rjq09PLkU76DcslmxdzRgVRA
      pbpVbFCXrBwomQGsvLkVTwsmGWxVDfl5fT6AtacHuaoK+9GjeR97eMXbxuhpQopOcfyRT2Hu
      OVGwnmJ45JFlw0u/+Z94r3+S480d2It4eifffY/g179OPJnC9cD91z9gBStNzYhOMzs5SnOH
      UVQgczlQFoNgDA0kqaCEhh/84AfLVabnA0xFIwy/+io2/7LX4plnnqEmj36vXLMTy4nnMPfc
      WE7zZiM5s/m7kqO4tb20uTmMaBRtdjbvYx9e4TrV99fz3g++yolPfB6l+eA6R62PkUhkV88R
      YkPC2PPl0qVL5WEAys57sD3yf2O//WTexz755JO5roA2O0sgGsV5zz24Hlqu7b9VrssPIjSN
      zMgo+p69KO7C42/kuh4kqwulMf+u1ErcT30UjyxT/URxYxLJ5kFyFlcXSOg6vn//BwQnJ1G7
      uopes6AQDhw4UB4GIElSdoVv8/VLWXyQlTe3paMDx+99eSOl5c3LL7+cm9/IDI8w9u67jJ49
      i+PEcrbbE088kV+BLd9lRHoBffYi5gOfLFhb8v33if7gB8RdLlxFOAoy5/4a9epLZHY4sd3/
      2zd83PDwMK++mp2FFoZBYnKCeDrNyLe+lfNQdXd3r0ri2Ww2xACEMJgcG8Fd30a1UyGZFDhs
      EpG4iqcq/5u65AiBEQ8g9EzeFZCPHTuWqwuUqa9n76XLuA8fxnnXXbl98n0jmY98FqvfhPWe
      p/M67oOkLl3GiEZJXbxYlAGYD/4CprEw5oP5GWNXVxddXdnQZyEE8X370aanqf6FTxWfN10g
      G2IAY1fOY2rcxcCl8xw+3M3kVAY94aVt740NRvXAEKnXvkImfj/mu39tIyQVhXr1RdKv/gGp
      xGvYn/hKXsfW16/opzc20n7yJChKURNFIjKJPv42uq8HU0d+3cRvfOMbuZCKdP9VAkIwMDiI
      bcWid1/4whfyKrVuhMcxAkOI8ATUdV//gDWQJAnX/UWuL0A2dD39yr8jPeBFHPijvLtlktiA
      AJf3T5/i+LE7uHrhHPU7m3n3lfdpP3iYw3s60HWdWCy2qpSFJEm88sorzC4OxnRfPwveS9it
      Ziz7l59yjz32GI2Njdd09628qfLZJx6Pr6ocJkkSP/rRj3KznfrMeWIzwzidDsx7l2uDPv30
      07ivMclWqJYP6lna5/nnnye1WC1Nm3yPBf8UruqaVeuWPfvss9d8myy1s/I86Sv9pP7+B1if
      fAL70eU6rB/Uu6Rnpd5vfWs5wlYbe5OFoA9XXROmnffkzve5z31uVTuKomAYxnWvx/X+Px6P
      rwptGB0d5e23384eq6XRLv+AuKZQ1X0nclU2YWj37t3ctfjWXfe3ERvA+dOnRFIzxIWzp0U0
      5hOXL42Jd995V6Q1XQghRCQSEZqmXfN4PTIlEn//GyJ97q83Qs51CYVC6/6/HhgW8Rd+VWQu
      /6As9GizF0T8u/9KqMM/KQs96vg7Iv7dfyW0yfdKrsfQNZF68z+LxIv/Vhjphbzb3pA3gJqI
      0HdlCJenge6OWnzzGrVunemwwa72BqLRKE6nM+8VTTaLcDh8w9GCW0FFz/pspp4NGQOYHdUc
      O7bsM1+KR9pVZOZdhQqbTVkEw1WoUCoqBlBhW1MxgArbmooBVNjWVAygwrZmy2KBIpHIuvH0
      QojrzpYahnHdmPwbaSd+A8uEVvQUr+dGKPX12TIDqK6uLnoeQNd1ZFnekAu/EX5lXdc3bG7j
      VtSzkWzW9bmpukD5ZmRtNhU9NxdrXZ8SXDFBwDeLPxhBAPFoCN98CEE2qjS6WEo84JthYmKC
      qem5XPyGJEmr4kfm52aYD0URCBYiQfyB8HI7SzWH1DTeqSmS6bXT94QQ+GenCYRjCASxcGCx
      zWzVsWhsARb3mZiYYHpuuTjV6hgTA9/sNMHIAgJBNDS/2OaKdgAtk2Rqaoq0tnb5RmHozM14
      Ccey9VIjQT/ByGLRAEMjGouDMJidnmJiYoJZ/3LJ9FV6DJ3ZaS+RhQQgCAd8hKLZroTQNaIL
      2c9qKs7U1DSqvnYyktA1ZrxTROMpQBD0zxGOLVbR1lViCwkwNKanJpmYmMAXCK/ZTjq5kDuP
      0FWmvV4yWvacyXiM9OLncMCXvR+uEZ+QSsSY8k6j6gJDz+D1Tq9oJ0pGF6TiMSYmJpiYmCCe
      Ws5bXnl9kvEoU9MzW28AsaCPuAq+8QHm5v2cuzxKZG6MSV+UqdEhzl68DIDN4cTtdjI4OLhm
      O9HAHElDxjt0hUBonvP9EwS9Q8wE40yMDHL+Uj8guNB3DrPNxrlzZ9dsJzw/Q0aYGOu/SDDk
      49LQNL6xK/iiKcaGh+i7kl0GyO5w4nY7GLi6tp6gbwYNM4MX+giH5ugf8zE9eIFgPMPI0CAX
      +68Cgr7z57HZrJw9c27NdgK+GQzZQv+5cwQD0wxNBZm82kcoqTI8OMTlgQEAnE43LoeZwcGR
      Ndvxz3rBZOXyuXP45yYYnYsy1n+eaCrD4MAg/QODgMG5c33YrDLnzq9dLnFuxotssXHp7Fnm
      vCNMBROMXD7HQjrNwNVBrg4PgyTjdLmxmw2GR70fbsRQmZqew2aROHv+MhfPnwVF5uy5PhLR
      AJfPvctMRCM+P8bwbJyYL3s/fLidDFPTfqyKwfmLV+k7cwbZBOf7LhEP++k7ewp/TMVkNuN2
      uwnOTBBLrfHg09N4Z+axSJmtNwB3bRONHhuRpI6S8FPX0UP3rp34/AF27N5DbVU26s/pqsKI
      B9nRvX/NPn91fRP1LjMLKojIDA2dvfTs7mB6LsjOrr14XNmEE5fdysT4OCbr2nkJNQ0teBwy
      KaGghmZp6txDb1c7kzMhdvXspdphBUnCVVVNMjBD14G1Q7zrmlqpsgpUxUIyOEdrZzcHetoY
      nYnQtacXtz0b7263KIxPjGN1rF0yvb65DadJRzPbWQj4ae/cTe/uFibmYnTv7cVpNYEk466u
      JuqbZc+htStnNLbuwCZnEBYH0WCQnTs76d7RiHc+wZ59+7BbFEDCaoLxiUnszrX1NLd3YBEp
      sDkJhSLs2tlBZ2sdc+EMe/f1YjVJIMlUe6oJ+gP0Htj74UZkM7t3dRLyz1FTX09aSLQ0N2NG
      x1pVR8+ubEEtq7OaeHAGXyiBy7lGbrhsoWv3ToI+H7X1dWiyQnNTC7KRwe5poHtnNhLUZLHh
      qXKgKi6aqtdIPFKsdO3qYH7Ov/UGkI7Nc/rCCMdOnKDa7SSdSJLJpLF8oDy2EAaj02E6W9bO
      5U1FfJy5MsEdJ+7A7XaRTiRIp1LYVi5GISAUS3PkyBH0a9Qcigdn6Buc5sSJ4zgdDtLJJMlk
      Codj9Q8gDI2pYIa22rXLb0f9Xi6N+jl54hg2q410KkUinsTpWPEDCI1YSuLIkaOk46E12wnN
      TnB1KsRdJ27DarGQTmdIJpJr6MkwtyBocq+dSDLvHWV4ZoGTdxzBajaTzqikUmns9hXtGGkS
      uo2jR44Qj669jplvYoix+RQnjx3CYjKR1nRS6Qw26+owbENLEcmYqbGv4VcRBhfOnMLR2ElP
      RzOSkBACDMSqGzA4PUPbngPs62phbn6N6yMMzr//HtVt3exuawCRrSsq+HCV0pmxIZp2dq3t
      MBEGZ0+9S/3OXpQvfelLX1rzL99A0ul0bnmhuckx4ppBJBCguqWT6MwQ3kCc3j1dTA5fYXZu
      HlWYcFsNVMVFnWftiDrv+ChpIRGaD1DbvpvQRD8zkTT7ejoZH7zMrC+AJlmotktMTE1jddXQ
      VJ9dfimVSuVSEr1jI2SQCPqDNHbsxj/Wz2xUY1/3DkYGLjPnC2DIVmwiheJuwONa2wAmx4ZR
      gaA/SMuu3UyP9ONbgANdrQxdvYTPHwCzE7uiMumdxempp6HW8yE9E6MjaAIC82F27N7FxOAV
      AimF3p1NDPRfxu8PIFmcSMkwjqYO3La18wHGR4fRhSAYiLBjdyejA1eIqCZ62uu42n8F/3wA
      xVaNWV/AO+ujuq6JOk/Vh/SMjgwjhCAYjNG5q4OhK5dJCCtdrTVcuXyF+fkAZnsVasRPTUc3
      DsuHvVBCTzE4OoWhpknrMg1uC/1DI9Q17UDRFhgYHicUXqClvZmZ8TFCsSQ7du7EbjGt0iPU
      OANjMxhqkowwUeeQuTo8RkPLTkhHGBqdJByJU9dQx3wgwq4drWvm2otMjIHxOfRMgv8fY4DC
      z0IhM8MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Comparaison avec recommandations journalières' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29d3Rd2X3f+9l7n3MLOkAUlhlyyCE5RTNDDmdGI8mSrD4qkS3JTmI9xeU5
      Tl6RvWwndrLeysqLs/JH8rLeW46TZ8dO4rYsKW9FvVozKjOa0XA6ey8gwd5QCOC2c87e+/2x
      zz33XuACIEiABIHzXYsEcO8p++yzf71sYa21pEixQiHv9ABSpLiTuC0EYIwhFTQpliJuCwGk
      iz/FUkWqAqVY0UgJIMWKRkoAKVY0UgJIsaKREkCKFY2UAFKsaKQEkGJFIyWAFCsaKQGkWNFI
      CSDFikZKAClWNFICSLGi4d3siWcGjzE6UcT6rWzub+XgqYt4mTyPPbSWc+cDOnMFJkQ3G1Z3
      LeR4U6RYUIibLYixxjA5PsKhk+fxCXhsx5Mc37+HNZvWcebEKIGpsOPxRxG4dGgpU2GTYunh
      piVAWJ5k6NxFspksYRCihEAKgbGWS2fPsOq+DQgExui0HiDFksVNS4DB44cxwmN4dJIN/a1c
      GI8ISiUef+w+Tp2u0OqNEuYH2LSuF601UkqEEAs9/hQpbgk3TQBRGFAJIrK5HEoKKuUSys/i
      KYExoKQg1Brf81ICSLFkcdMEMB+kBJBiqSK1TFOsaKQEkGJFIyWAFCsaKQGkWNFICSDFikZK
      AClWNFICSLGikRJAihWNlABSrGikBJBiRSMlgBQrGikBpFjRSAkgxYpGSgApVjRSAkixopES
      QIoVjZQAUqxopASQYkXjprtCXL0wxIWrY7R193Nvt2LX0fN0tHewddNqhkciulsjrhY91vV3
      LuR4U6RYUNx0TXCxWCCXy/PmG2+ytsNH929lbWcOYcY4fqJAYfIyjz3xBBkl05rgFEsWNy0B
      sp5k1xuvsXbjg/Tk4PzlC7x+dJjt2+9n8PBe7nlkW7L4jTEYY1ICSLHkcNMEsG/PHh7Y9iTt
      OZ9rly+y/r6NTIwOoy3c//AOosJ5hif6WdWeA0glQIoliZtWgYZOHuF6ISDb0smm9f2cOH6S
      VWvW09uVZXLS0N7mMTxaoHdVV6oCpViySPsCpVi2ODV8kpyfZ03H2hmPuWkVKEWKpY63zr5O
      R65zVgJI4wApli201QS6MusxKQGkWLaw1s7ZlTwlgBTLFqEOCXU46zEpAaRYxrBoq2c9IiWA
      FMsWgQ6IdDTrMSkBpFjW0DYlgBQrFJGO0MbMekxKACmWLYw1hDqY9ZiUAFIsW0QmwpK6QRcN
      X97zJSrR7IGWFHcOxmqCOd5PSgC3gFdP/ZSx0uidHkaKGWCsxaSBsMWDtpqJyvidHkaKGRCl
      gbBFhrUUKpN3ehQpZoDFYtJA2OJBWBgvpxJgqSLQAZFJ4wCLBgEUw8KdHkaKWZC6QRcTVsyp
      Y6a4fdhz/q0k+9NaS6iDOTNCUwK4BUiY082W4vbhv+7844Qh6dgFGupw1ljAnARw8OjJphQU
      BUUOHTzA2GQZaw2njh9heLyIMQGTk2WsrjAytrwNRK0jSmHxTg8jRQxjDca61IfTw4MMjZ6e
      c4HP+H2pXOHI8VP8xZe+xqtv7Zv2/aVLV9n8wAMc2reHk4f2kO29h5OH91GpTHDu3DAH9+5F
      ZbO39EBLHdboVAVaIqgy6arRa6wG6xwVs2HGmuAz5y7wJ3/5//HQ1k1sXL9u2vfr7l3PqaMH
      6Ohbzdj4VTZ3tzHZkqcQhgwe2s26tz1GZ95f1n2BhIVKVCGKZvc0pFh8hDrEWE0lKJNTOSqh
      M36FAR1FGNGc189IAGGk+YW/8yG6uzpZ3d877fvjB3aR7dvI2wZ6OLD7GiVtCbQmqxQbH3iU
      idGLVPQ9ZJUClmdfIGWhoit4Xtpb4E7DCgMIpJLufQjnpVMIlOch50sAjzy4edYblkNN+co5
      jk1O8ODDD7B/7y7augdoybbQvcpn88YOzl28xsZ7+m/luZY0hJ3bzZbi9sBYg7Wmwe+/oXsj
      vlCznnfTrOuxHW9v+HvHjieS31evdj83ttzs1e8OyFgFSnHnoY3GYrG2lv/fmm2DcgjWOnHQ
      BE0JwFrLtfMn+f4PX0Jmc5iwQteaLXz0A+/EV6nntAqZxgGWFKwleR/GGpRQCBvMmhDdXAKU
      Rnnj6CX+3ud+hYznFvzVcyd4bfdh3v3k2xZ63HctlIFCsLxdvXcLjDUu94eqNyjElx5mDi9Q
      U3YuWnr4+Affzde//EXGSxGXjrzCa2eCdPFPgbAQRkHie05x56CNdjbAFIksb9YNumfnD/j+
      s88xeOYynpJ8+nO/viADXVYwBk/5hDog6+Xu9GhSwDRmJBEzqf/ALASw/V0f5rcRHD8/hqck
      Oky9HVMhrMVXPpGJWN4hv6WP0ISYOi+QsRolFXNURM7uBTqw9wDbPvwZBtqztHV0LdhglwsU
      EiPUnL1nUtweWJwqBBBpjRfbALPRwKwunYGeFr7zja/z9a9/naNnrizgUJcHFAIlFaFJPUF3
      HNb9V18Ao4QCY5x7aAbMKgHe/qFP8cBkCYCuVdOjwSsdComVaprhleL2IzRhnAI9sxH8/cPf
      4f1bPtRgr80qAa5cOMPBgwf5/lf+hlcOn1/YES8DCEBYMWcH4hS3D9UieG0jlFQNyXAvHv8R
      5bDccPysBCCkRClFa2uO8ck07XcqpBVpQcUSgXODWnSsjmrjjOB6CWB1NC11Zdb319XdQ2li
      lK77n+bT73104Ud9l0PE6bbLK8Xv7kQ1EKbr3KACgbC1t2O1mWYRz0oAr73wLHSuo3RmN8/v
      GVzYES8DyBvIN09x+yCYnpxYlQDGGkSTPqGzGsEC0NqgTbTsUplvFVo7HRPpzdl5IMXiQ5vI
      eXtiG6CaC6Tr/m7mDZpVArzvE7/Ihp4sW576CD/zyPpFGPbdC2sNComHws7RgTjF/HD86lHG
      y9fndY61NlFJwSXF+V4GYeKieAvS2Gnq6qwE8OUvfYG1D2ynJzrHt146MK8BrQQIUv1/MfCD
      o3/L8atH532es8fEtM/AFclbowmjRhVpVhXoyW1b+cs//RNEWOAzv/b5eQ9ouUNWJW5qBywo
      BNNzeuZCNQ5Qb5MJ28jhpRVMfVnN6wGKo+w/P8Ej7/woD7/jIwihCErjHD42yENbN81rYMsZ
      wsaG8J0eyDLE/O0qOyXz0yKEaDCCrdbTmFVzCZDvILq6m//+5qvcs241QXGcK2MVPvjMM/Mc
      1PKGc7Pd6VEsQ9jYqJ0HIqMdI4rtsUCH+CpDELtBrTWIJjZAUwIQQrHjXR9gx7tmvqExmsuX
      rjCwdg22PMH+o4Nkcm1s3XwPxYKhrUUwOhGxqrttXg9yN2GuXPMUNwdrTZLUdqPQxnF3PUMq
      hLYamlxzViP4zLGDXLx0nq9+5WtcuV5q+G748gVODp5BA8PnT9G38REefuB+0JNcOD/CwX37
      8PPLO0deWPCEwszzZaWYHVpHBNH80u8F8WKuY0pKKoSuuT+FhSichxH87LPP0t2Vo0gbP3jt
      MJ/7yI7ku74193LtmnNVeS1dnD91gHMRbH/bOk4e2sW9j26jI+ct275AURTFRpYiDIK0N9BC
      whiCaH5zGkUh0oA1hiiKCKPAFcNYSxQ5gjLaoLVuuO6sBPC+9zzN93ae4ENPb8SuunfG41p7
      +tm2+l4O791FKTRsemgbhZGLlMN15Pzl2RdIRxV85YMQqGovmhQLAikkVth5zam1BmkFSig8
      z8PiipUkAs/zUCiktXhKNVx3VhWotb0DT1/nlf3nWNfX2fDd+aETjE2Mc/ToCSavj3Bg3368
      9j7a8630rOpk27YHuXxlZJ6PfndBxkbw8iHrpQFh5990WOCaFEwLdFW9QMbEtQGN389KYj98
      7od8/Jd+g9KRH/L9Vw7y2Q89nny3bsNm1m2oNc9a1b82+X1gwP3cML2j4rKCSGMAiwLnrZ/f
      xAqauaRF7Pt317thL1AVA6va+fIX/gpZGmaCEzybszzz7h2znbKikHL/xUEUBvPut1SNyUSh
      kxzGGpSSiZvaWovFEs0nEvzQo9s5ev557nv0SdY+8ARPbl0zr0Etd0jipmM2JYOFhLR23m5Q
      rEXVMaTIRHjSawiEYcy0uM2sNsCPfvQCH//oBxifuM7RoYvzG9AKgEgX/6JA3EwgLAqdDVCf
      CiGVS4GOub+YbzboJ37u7/DcD37CldEKz7zj4XkNaCVAWMh4mWliNcWtQVox71QIEZ9Xz5Bc
      yar73ViN1fOUAD99fQ//4B/9Fp/78CO8eej0vAa0EpCk36Y1wQsKYeefDCesa1dfhTYaKWol
      kdbapnlbs3aG++a3vsPhE2dRVvPJz/3GvAa07BFnGqbJcM0R6IByWKIj1zn3wXWw1oKOCObZ
      dl4Ask4FqtoA9fUBAjBTejjNvD/Ak+/hX/+bB+hb1cnZC8NsuWfVvAa03GFMhJJeuvhnwLOH
      v8NIcZhfffs/mv/JevZePs1gooiM9BFT3KdVN6iwoIxoKF6KTDSzCvTCN7/IpbLiz/7w/+GN
      n3yHH+5Ka4IbYCwSmbpCZ8CxK0cYKd5cIFSZ6UltzbDr7BtcnXQN26wx5L3ctBaetUCYxquT
      ECOFYf7DC//XzATg+z5HXv8Ruv8R3vHoJkavT9zUwyxnSOLFn5oA0xBGFa6XRmc9ZqI8zrcP
      fG3a59LCnH3Ngd1nX+fc6BAwPRBmrXHpN3HFktURqs6suDJ5mSOXD86sAr37E3+Xtt0HeOCx
      7YxdOMUzAxvmHNBKgzOAZ+8+vFJhoohCWMAYtxCbYbx8nTdO76S3tY93bnxP8rm04oZSzZUV
      iQfOBcJEnQ0QkvGyDTXB9RJgvHydSlSZWQIoP88Tb3+KtpzPPZu20t2a9j+eCpcNmnaGawZl
      IQjLhGZmY9ZaQ6k0ybf3f7Xhc2lvrNbCap0saKfj1+IyVdW0KhV0FKCM29oWYKQ4jLEmbWx2
      KxCAr3x0lPYGnQppXBeG2XiDsCC0xkaNUV8bBjdGAFFUU3m0xhMq+bsaE5ANBCKwsReoEpbA
      2pQAbgUiVn9mU4HmHdJfJpC2eXZmPYwxEOkG/z04wjE3UAugLMlx1mh8UXN7og1KSCKjGS5c
      w0ZRrAK5EZkgcER6E8+WIsaNdIb7H7u/wOmRledBM2HQYHQ2PcZECGOQUwxeZURS2zsbpK25
      NYV10tjENoGN3B5hZzsiXhh83u3mU0eQUltaVDYlgFtBNdQ+GxFcm7jMRHn8to1pqUAZgdSm
      YdvSabAgoukEcMM2QKRrxxmDQiTxA2VrGaJK25gAakayDUPaM+0pAdwsTBTiKX9OD5A0c0uJ
      5QhpHZed1UFgNFIbosqUluU3SABCu04QxaDA9w5+o8ELJK1ACoUSEsIIGzoVqFoYryJNq5dP
      CeCmYW9MAugoXJFuUjUlN6cZtI6Q2kxXlbRG3kAqkLSOEUU6QpdKZFSmxuGjCF/5eEaitHGS
      oM5mEJGmzW9LCeBW0KwV31Ss1A7SJpjbBqi6LqdyexFp18RqDigDmHhbJO1qgqtvQ8RNGCRA
      EGLDEE/XskVlZGi5FQlgrSUI3C7c1lpKxQJhFO/VGjndL4yWrwekyv096SWutabQGr0CN9GT
      VqDm2D1HWCByalA9lAFugACIObuIg1z1zKaqeioDMtQIY2MvkGX3uTeJSkXaM7cgAa5eGOIn
      P3mFCLgydJTDg2d4481dBJVRTpy4xJljB7g8ent2ldl97k0q8yyiXghI4g4Gs3ksoghrly8j
      mAlevPhmCwToKEBEESZofHcuEnwDimMUJSkTnnGRYWGqRrBAIJwxHkbImABCHfBfXvhDTpzd
      R7vIz14SORv6193HPSOTAJwdnuCJJ57i2P49FMKIM8cP0n//Rrb1tid9gRYzWvqDQ9+lI9PB
      hp7b17dU6wiqIlibGXvYCM2s3y9XSAOeEdP68NTDRgalLUbb2jE2Ll43ds45E8YSBRXCMESE
      Gi/vEcU9mkzg+gJJY1GhxlQqeAZMGNFZFqjrBdrkLRBAPRQCbS3GWqQQrL5nPaXJCQw2yQOZ
      KR9kIWDjzSqUUot2j6lQUsUSQKDivdSaQegIJW7v2G4boohr//E/0ftPfnfaV0Jr/Pi5Z3p2
      JWMObWg4RlnhtqCdY848BB4ST0l8AxkvixLuPGUFSnp4VqAC7Y4zAqE1LSVNRwU6/LabJ4Dz
      Qyc4f/EiUSbH5g3reOvNXWRyrbRmsrR39bChtYVTZ6+wef1AbVIWqTFWte31bW28JWpRYMHM
      zya0mfX7uxnGWirHTzR9NmUEPtI1pZ3h2U0YOq5savNjrYUgwIbenHMmIp20Q/R03KcJdy0V
      Fyx5yscLNYShqxewkAssbRVJq99y8wQwtS/Q0721jhEbN7qf86sFunlIbYjuQD5OrSSy8fPS
      vv3kH3ObCopQo1dYzXBp924YGUV1ts5qA1SNVB02vjtlSXT5WRFpTBhgjXHEUNekoOpZ8pCo
      UCO1xbMSgcUPLe0VyC+XOIC5A752G0Uo5SX5QPUY+c9/mvwutF62NcM2CMAY7JQFHAyeQgZh
      7Aad+c3I2HujpkaCDTdkBCsrkniBZ6rnVccW4qmMU68qztPkIxEGZBjREgrymZblQQD1Ie7b
      BmtcRRiNr9iGIdbWjH5lxJyxguUGG4auJydq1ic3UYhnnB1QjxutB6i6Oq3WeFokKhCQ9Ajy
      DPihQQQRvvDAGlASXwtyy4UAhDbTip1vy30Bz/MbRLi11rnmqp8FwfIOhDWRADYMkULhC5Xk
      3zeDMK6Z1dSAWbNUiOIbb1LatbvxuDgOYEzkjOBsHht7jqqZqMqAVw5RFnwvQ1Qsksu0kJE+
      mdwyIQCi0KXW3mZUC2JmU3GmNmtaVghDphpA+vo45QMHUUbMGQmWsfGqDA17LIgwdNHgukS6
      8MIFwvPnp9w/wsYMxjOghKoF0CKNlJ6TAJFFVAIyXg5pLBmVISN9vExueRCAUzNuP+q9QAmm
      EINa5kawNTbhugDRlSuEQ0Nx7o2YtV7ahmGSM1QvwaW2cSJd3cFaNwQcK8ePY86ddxsVao1n
      RKMRrA1SCDwj8ErOHlFx7lDOy5GRPsrPLA8CkE06fi02RDXzcEquj43chs3VlyXD5WsEJ2jy
      fMpMV22mwqUnuEVaj2Yq0NR0k+jKFUSxDMUS49/6dpJTVG8DgFNRs9oRlUIijCXrt5CVGWRr
      6/IgAMLoztgAtokEALcgYlG8nFSg0p69FN94EwBTLqMnC+5ZY2KPrl2j+MYbgAtsZZQ/a5pI
      tWpsKqEo02gEW2shms5IlAVzbZjizlfwDUhZ6wRXdT54VuAVAwgjpOfFKpBP59PvQPr+8iAA
      FW+NcyOw1mLD5sSiJ+bX+iXpPTnLAleRjn1Fdz8qx44RnD4NwOSPn6fw0ktO2sXEHgwOUty5
      EyC2AWZWTa0x2EIx9gI5VaqKqRIgunyFyR/9uNHYNtZJXx3nAmlQ0oMwxFQqEIYo5TkVq+xU
      UOX56GKRrMrQ/bnPIZYNAcTegBtB5cgRxr70JcoHDjR8ricnufrv/v287lvVORtecsyprK5X
      gUCPjaGvX5/X9ZcazPh4sghNsYiZnARswpmt1piSK25pluZcj+DUaSa++o0G3bwKqU2cEh0R
      DJ7CTEzE96qhaj+4e9hEalR2vkbh+RdQ2mUGKCMwQYCpVJCejzQWX9fe2LIgABFEs/JYa4zj
      CrgXVz54iPFvfKvxoDDCFCabnD3DNXWEVJ7LcaqXPtXEv/gzPwITVii8vJPJH/0YgOKrr92w
      xFpKiIZHIAzjPjsWUyyCsbWuDtpgCwUg9vDYmT1kZmwMiiW8OGmuHiKMnBFcqXD1D//DjONR
      BkS5UguoKQ9ZDjDFojPAAV8DxmAmxpFSYctlsiqTXGNZEECzcHo9gsFBRv/qr90fkcaGwbSC
      C2s0NphHOoVxgTClvAYvyFTISuiCNWEYB8kso1/4IrZUmvGcpQhrLWZinMmfvEh06ZJ7lkpj
      GnP9PCghyGbymHC6B8yUSkQjIzPaANXqLau1YyhV+27KO1NWOFcowkWChXReIWOQ2jobwIDw
      PEypTOa+jYSHjjQQ3F1PAMZoJ+5mKb62QYgZb9TvpxFAGN1QFVI9mhnAzndtXcQR8KudCLTz
      WRO/1LsOsVpni0X08Ehi6FtrsFX1pe4dSOMyOptZAaW3dnH9q1+L/fdxvKBuThL1qfo+4p/1
      /YNM3DtIaluLAyi3I4wNAkQYIj2flo2b8Xv7MOPjZLdsxpbLLiJcHefCzdCdgTVmTk+LrdMv
      bVBxnGtqhNLoaRxtNtTXAzfcOy7SMIUChZ2voLSzE2wlwJRK2MgR2mxSY6nBVCqEQ0MQc+Kq
      NDOFYoMDoOpcUKtWOf3cNI8DmEoFMzGRRIGnxQGsQBqRMKWmcxWfKyquvaFnRLwfgFO7vJie
      en7ll8lsvA89NobI5xBCkqGWZn3XEwBUez7OYgWYxnbbNginTaqdkrQ2pzSwdUTQ5Gs9Nsb4
      t7+Nry0iThewYZhIgKVsA1itGf/Wt5M5KL7yKte/8c1kzhwDsdgwcHM2ZS5FxndJaDPMDVEE
      cVtDRwSNhKIQSFsLsM30LpQBGdXczdX9GmwQJDYAQPahhzDj4wilkL7vbJMYdz8BWIunbVNd
      s+Gw2EZIJnWqvh/3pLeBu87In/8F4aVLs1yxtkdwM+ljjcEGgTOCo9BxspjwrNbYUpnhP/sv
      S1IS2HKZ8e9+DxMbtJVjx9x8xZ4tU6k4OyoO+iVeoHjuRD6PL33XqKruvVjr2qRUj1NxKkR9
      wyqsiwIroZLjEhWo/lph4IrgQ5MYwdU+QAAyqtWHeL1ubwvh+8hc3m1wHuOuIoBoeJjJHz/f
      8Jk1GhU13wAtOSaomzjtFma96879jNyird7r/IVprrd6JGkQFszERJL9aaPIcfhKgCkUEx3V
      RhG2XHLuUWMwpRKVQ4eXJgEYA1oTXb3q/i6WnA1TpwJhbawC2Wm9PVEKT6g4FaL2XqLzFxj7
      whcTZpRdv8FVjU01grXB1ds5b5qtK5esDdIl0slKpVb8LhTCQnn/ARgZRVZ3hPdqC15ls3ev
      ERxdvuKKLepR1QXniAMkiVVaO3UkJorxb36L8uEjjsvYWhanKZecT38WiDjfxf7wpZrBZuoI
      K27cVO8FqhnBtvb3UkMUYaOI8p49AJhK2enjdSqQDUM3V7Zm8CeBKhlXZNnGNPXg9CnCc+eS
      4zo+9lGyq9c6G6DOi1dNh06k9GwqkKFmTGeybq/gCxeS+AvUVeMJd8xdKwFsGEw3VGODR1+6
      7IzMJpLARrqmAlUXepyvE128ROXgwWSyqxLBlMoz6uk2DDGlkiMAz5/W1gMAHbljTNyCO3JG
      tjUuqcvGEculaAtY46RU5cRJ93cQz3vUKAGqc1rY+Yr7vZr/1NKaJLnV2wDRlauJCgggcnkk
      Ylr3iGqAK8mrahK5r7ZFFJUwUYGkUgnB1dcYCN9PfqpMtsE+uKsIAFvHZaofGY0XWQpf+yZX
      //3/TfHVV6ef14yDxBsn2ygkPH/eSYg456R88BBmbHTGfj+lXbsY//JX3A4kCEc8VRXIaKfn
      RhqiyFUs6TojODYAq1Jo/BvfbCACUygw/q1v3/QULQiiCDwvkYC2Ejh3ZzxOW6m4z+J3Mfns
      c4x/93sUXvppcgllBZ6XwdSpn3pszM1F/JnM5/GEcly87vaqWhCjI/eeqmpq3bUwcQZoqJO8
      //pkOM+CqDZiULVl3vrUU7Q+8mjy94IQQDh5jdff2sOhoyeJoiJXr44TFse4eHVhm8I2C75A
      XPVjQI+NosdmSDdIDKmY0xsnAazW7mVWJYA1BIODyd+6Tr+vwhSK6MlJZLNN8mIJY+NeN9LE
      +n8Y1LxPVVUrDJn47vcafOCmUKTw8s75Ts2CwmqD8GuJbG7eA6dSSEnhJy9SOXmy4Zziyy8T
      xU4D4ft4XrahU1tynarqBMiWPAqBNyWfSmgTG8GxOho0OjisteiJCadalkooP0v7258ms+G+
      ut6gLgAGtZ8oRfszz9Dy1FPJtRaEAK6dP8c9Wx/hwa2bwJS4du06+w4co7u7bSEuX4OtVR8l
      6o42qMjiadFQnTT5kxcJhtz+UQ2R3+pirqYrxNw4Ee9RVMfpAq7+23/XELW11qLHxxv0eyKn
      1uixsbqxuvtUdympXjcZfx0h2ygiGBqi8MqriWvxTu46Y8MA2drqFqwx2HIZG4XIXA5vzWr0
      yAhmbAxvzerknPpnF9ls4t9vsM20xpRKbv6oqkouXyfx8EQRQilXTGkMcevBaWMMBk/Fi9fS
      +o6nWfX5/x3V2lKTAPXpFbEkEE3arCwIAbT3r2Nk6DAv73ydQBsGD+7G61pDzpNJY6woim75
      n9YaU64QRRHD/+3PKR0/ThSGeNrZAaZUwpRKhJUK49/7W8onB+Pz3ERGUVQztowhqgSYwOni
      Ol54OggSjqODCnpykigMkzGE4+OMf+3ric5b1ZfLp05x7Y//hCiWADpe4K5m1WICpzJEMTHp
      So2rReUykztfobRvH1EYYnWUNHi6I//KZUQu58YbOOZhwwjRkqfz1361tng6OpLfzWQh+d3i
      NrkQ8UYX1euaICS6cIFSNaU6l03KInV1fisVUMo1vSo7O6y682P9tWyk8VrbEJ6P9X2MlOhI
      19kA1NZNbARXm3TV/1uQxlihga0PPszB3W8SGbj/bU8QjJ9jtNCf7C0mpZx3bxxrLaU33yT/
      5JOu0anWmPFxis/9AMoV13lAKfxqSq3WCO12HLGTkwit8TwPGRu9nuch6kPuSiZ2gIglhMT1
      j8Tzkt0KlbWoWIyOfe9vsUHgKo6Qrv221ohiCVsuo+J7idhwE4AnJUIb1w48vresi0RLY9Dn
      ziE7OlDGgDbuHG9BXs+8ERmDzOcwkwWUEC5KXiwiuzrx29pAOPemam+vnVRvxOayKAS+n0Vq
      g5c8RyMn99vaXMqyAU95eJ6HthaZycR2gDu+GuwS8bWsMa7hGArZ1uqCW56HlzghRBkAABdQ
      SURBVMkmqRctm7fU7pvJgJSoTKZuLA4LIgFaWnKcOHKYgQ1baMt1sHpNN49s305YvLXeoLZS
      YfSv/6bBiLWVCsWXdzqupDXCWpR2XCQxzGys29d5fsz4uDMuq+qN0TVjtBLUopmxWiRzuabq
      SLUgxFZVoPgcUy7FerKtXYe4MimuXSXSiWGp63OT4u9tGNZUsDupAlUqTgWKIqeSeL57HimR
      LS01lSKTaXp+zQaYogLV6fLC9xGZDMrzUQaCI0e5/pWvYisVRDbb6AWa6imLnQye5yNzudo1
      q8auUvT+zm/Xfa7iRmbTGfCCEEA2387DjzzC2v4epMrS1dWC9LL093Xf2oWNcUZv1cMS1uWi
      RKHL59EGP4pnOYoSFx1aJ4YogB4dpfDKK3VBFWKvTxgXUVS31onddJ5ykU9jah0eqPNCxcXY
      QipsFGEmC/G9oT6iLCyOg4YheB6m5JjC9a/W9se1UVzEUV38Wt9hGyB0Cz10EWyRycRz4iHy
      eScBlEK2tjY9X0hViwNMuW4Vma1bAJC5PMpA4aWfMv7d76GvX0dmMrU4gLXTgoWTP36e6PJl
      On/uk4h8S6LbCwRCCEQ22yA9q27QZnkZS9oNmqQNVDlHlXvrCFuuOFejjXO+q+cEgQtGGYMN
      QgovvURQ9WeX6nYiMcbFB+Je9AmhaRd5lPl84qevz0WpGms2cM24pPLcS6qU3cKtcq2qSuVl
      EJFxHEjKmk+7nqgqVQ9RnJJtzA1tFL1YsJUKsq0t9tpEiFzWcf98Htne7lIK8jlELofINm6f
      K7JZVEcH2TVrUZmMk4rV61afSSlW/ebnXcFK1vnlbaGALZUwhYK7vhFJgK0+/mAKBQovusCj
      6uxCeKrBuBX5PLK1JqUAkNIds1hG8GKhmg9eNUoTThDn9LtjooZAlA3ixlQx4Uz++HmKL78c
      fxc0htWrqbxGu+KOunsiZS1WUFWlrMUGIaq72+n5dSLeFIo1QqobqxDC6f8x17RTXHoA5SNH
      XKpBFNZE/mx7ay0gmgXibKQdBxXCjUkpt1g7OhBC0Pf7v4fqWYXM5xGZWlRV5PNu8ba3s+p/
      +1+RHR2YsTGi4WFGv/TfE4ksMpmEQ8tM1jkwRp0XqfDCizEBuJJJW584aC2lt3YRHD9eu6df
      U8OEddeWuVwtBlDFDI12lzQBVINGTJUAURRzzQpYGrbTMVWXpbVUjh2r/U0cpKouUK0pHz6M
      LVdAKpf45XlJGoDIZmMJY5MkMGLPj2xrdT9VTczq8XFMsUh07ZobR9XVl8k4A1s5LmTL0wth
      ijtfcfeqqm11rtjFhDWGa3/0HxtcsgA2qCCybpHaSgUhldPLu7oAyD38ED3/+Ddo+8D7af/Y
      xxJVSHV3I1rygNO7ZUsLplSktGs3pdffSKSByGRqaoufwevvx5ZKyNZWSrt2IXwff6zA+De+
      mUScM5vvB9w7zWzdGp/rITyn3wOIXJbsls20f/KTjQs+lr7NsKQJwMa9YKZlbtZ3I9NRQyPV
      8qFDRFevYrUmOHac6OKlmrEW6ZpINoaxL3wRPTKCyPjYctkFf2LOK5RHeOq0i3rqCFMuOxeq
      tcn1hF/bJM8Ui9hSieLrrwOu7BFA+VkoVxDKQ/h+o/Fbfc44t0aPT1A+cBCLneowWRwY455x
      SnWaDULHWT3PqSTZ2IvSVovrZDdvRnV14W9Yj2xvQ/g+3b/6K2Tuuy/RuWVHO2aigCkWGt6Z
      rNPRvZYWMqvXgBBO7apUnHGMaCiI8deuxRRLVI4fp+Xpt7vPpXTSKZZC3sAAq37z87S99z3T
      PI71RFePO+Nnu1HEEsAEFcexDxwEnNGIkLG+XZUA8QOHIfrK1Vp0VUpkLosOgiSo4y5iXZWY
      lKjuHsJz55GtrZiJSWyhiMzlkrQKGwSM/vXfkHvskYQAhFLOUI5R5fjVn1XDPdPfjw5ChJSY
      conJZ5+b9pgmJoBwaIhwaMjp1bdBBXKetGh6ekkQINvaEBkfUygifJ/2Zz5C9oGt066hOjrw
      12+g7cMfJvfYoxRfey3hyKqtjcrkJEoKouHh+ASFyOWctAWkn0FlskRVDxOOQKRUaEhsNZnL
      okdHkW2tqLr4Q70nqmoAT4MQjTZBHZa0BEh0/zBEj40lnRyShRwbqPW+/czWLUSjowkBCM9D
      5JxYdsTUqIMLzyO/fRvhmTPIbJbr/+PLFN98s0G3xYKZnCS6eAlrreNwUrrJrwaWY8Kql1b5
      J5+g7b3vdUawlE7CBEHtpcWc0pZKjtirPfLj4NqiI3Lbh9YbquDm27kps5iJCUQ2S+cvfIbs
      Aw9Mu0Rm82Z6f+vzdHzi424BKi9ZbLK9AzMxjik7B0HVvdzxqZ9PVBKZyaBaWhBS1tQnv27u
      hSA8fw7h+5hCwRnh8SIXnt947AwQuCIdmsShljQBlN7aBcDkcz8gOH3aGZDClRfaOBpYNUar
      UKtWoYeHUb29eGvWNLjrrDHTi9GVQsYBHdne5noDad1gXOnhYRcVvXw5lgDZxLOQqECFIpkt
      mxtsjsz99yNzeRcUU6rGhWJRLPM59zzlciOXuk1xgGrKdrPmtq54JIe+PoZsxlVjCCEaFmH7
      Jz5W2xshl3Xeuro5Ea2tZDasT/7ObdlCfts29x5aWhDZLPkdO5CZLLKjHZnPEZ46DVJiJied
      nVG9n3S6ff27mmGQTmI3kQJLmgCqelxx5ytMPvcDt/iy2bjutprHE2cWxi/JX7uW8oGDeL2r
      6PzMp504jUUrUdTQYFX19dHxc59MQvoil8NWg3d16s3Es885ArhyBYxBZPx44v1El7VBQOu7
      342tVMg+/BCys5NkFxljEFIkLyrhYNksuccfd797Xs13PaUP5mLBxnETO6WazgWjMsiOdqLL
      V5zv/wbhr16dMByZy2Eq5VphkVLOaK3TxbNbt9Ly9NNOVW1tRXZ0kHt8O32/909ofc978Pr6
      3YFSghC0vP3tjWpPJtOUszdACEc4d5sbNPu2h91CAiqHjwDOsEoe2DpjUWYyyaTnHn7ILXLP
      J7d9G23PfLimzljrJt/zkG1tZDZupPPTn0J1tDtbIPZyAA26pB4fx4ZB0jlOZLLJdaov0xQK
      yM4O13XgnntQnR0IJV1VUrEMygMZN27N50BK/IHVqA4n0jNbNjdwqJm61y0oYhVyWpWd1gjl
      5ii8cKFB554PRDZLdPmKq9ACvFWx67RJiodsbUW2tCBbWxFC4PX30/3L/wDZ2ZF8LzwPf91a
      Z5RD4lqecxyeR98//2c1Rlh/35t6stuE3EMP0f7xjwEkunPnz/88nb/4C+6zOHEs9/jjdP5d
      95m3ejWt7/4ZhBSo9nY6Pv7xZDHLjg43gZmMK47ocsSlurrIbN6M6qxt6lQv1s2kU4tsqTxN
      AuQf307mfrc7peroACHIPfYYqqcHlIcQEmJPSlUCqN4+Mps20vtPf5eu/+mziGyGzMaNtVA+
      3JZKsWpFWvmgcy6UDx0mvHgxSUdQ7e2Ep4dQq1bd1PWdjWSRHe2IfI7WD36Anv/lH7s4yhT0
      /s5v49+zjpannphykTru7nmxAyJOc/b95N+cY5khr2pJEwDQsChlR0esIz6efOZC9X4tLC8E
      qqurQUxWdfzcI28j9+ijjsOsXUsm3sxM9fbS/y/+D0S+llci68S+DUJMuZKkMchczr2IOOrp
      9fU5nbm1FdGSJ//Yo3irVjkisWCGR/F6ehCeR2brFjp/8TP0/u7vIPN5F1zyfbz+fkA4u0WI
      aXr5QsNam9grZnwCPTHB9S9/mfLBg44AfJ+2D7wf2d6ON9B/U/cQ2Sy5xx5l4F/9n3i9fchs
      lsz69dNUESEE2fs30fren6XjU59q/M73yT/5JP7q1U5NzGRcZLru+zlVoFmwtN2ggKz6nuNQ
      vPC92EWXwVQqFF/6aS3MrRRCSmRLHkSNtrs++0sUX95J24c/ROb++5l87ge0ve9naX3Pu4Ga
      +0zIKcET30/SnvXYmCsOx71Yl29SO779Yx9FtrTi9fSAlOSe2BHrwBUYn0T19aGvX6f77/0i
      2c21zQXBRVD9tWtp/+QnaPvgBxn+f/+4acR4IVE5dIjRv3Td8qwxFH76MpXDR/DWrCG8cBGv
      rw/V3cXqf/OvEzV0vhBC0Pubn3f2jJQNdlXT45t8r9o7aH3/z6J6epzTwfPw+vtp+9AHka1t
      qK7OpqrNjWLpE0DM2YVy0UiERPX00Pr+94HWVE6eJPfQQ04sCpefKXKNIXqZzSJyOScZZuMW
      npcYW7KtDdXTk/TB1HGHBHdB57Ouit62j3wYb2A1qrOD7v/510ApWnbsACA4d46Wx7eT3byZ
      1ne9E9XdM+22XX//7+Pds47OTRuTZ55qmC40ouFhwnPnUD096JERxuPkvMKLL9Hy1JPIqnrY
      RF2ZL0Sc2j2nt6YJun71l11rw/HxRHUF6P6Hvx7bCn235DFb8gSQ3bKZzs/+EuNf+7rr7OV5
      CKXIbNxIePasSy+u6ndCgIjVlykur6q64dyRIjGu6iGkdAlenkfLU0/i9fVS+MmL2CBICKDl
      HU/T+p53Uzl2LHkZuYcfTq5R/zuAv24dff/s9+PhNSe+/PZtjePIZqf55hcaNgxBCLIPPejU
      L6WILlyguPMVWt75zoXf1/gm6xtkVZX1PLy1ta14q+Nr5tmZD5Y8AQjPI7tlM8LzaHvf+/Dv
      vcd9oWRSIyzioFQ1xO719+H3N+qt/f/yX9Tcc23tZDZtmn6zWMfMP7ED2daGv349uW3bGlqp
      q74+vN7eOBFsbo52MwtJKDVjQf5CwZYreAMDdH32l5wHJp+ntHsPxZ2vJM6BhYSTAHMbqzNB
      tbXR9/u/t4AjcljyBACxoeMp8tu3u1RXXK6Oy+502YreqlW0f/QZREsLmS1byNx/f8M16quX
      Bv7Vv2zIa0nu4zkds+cf/rqzJfJ5/A8PTMk+dC8x/8QT+GvXLcbj3h4JUKnQ/sxH8Hp7a/fN
      5VxA6ibdnrNBeOqWCACYMaHtVnDXEIBQXkN7C6GUC+OHrojaG+hP3KPArP5hNYNRJ5RynH3K
      RIts1qlZQiRcv/Vn3nULTzQ7EuN7EWHK5YbFD3EqcVvbtM8XBEoh/KW33JbeiJpBqsZUAqip
      QGF4Q8GQG4FzseWmf57PuxJJY26Zi93QOG4DAdgggEzjs/hrVtP1uc8uSi2ybGltOrd3Ggsi
      U6w1nBsaZGyyhDUhhUIFqwOuT9xaTXAVwo8DT3X6tMy6RC2MuWVDqB5VFavhs1zOueHqvBCL
      CZHJLLoXyFaCaTk+sqWFtve+d1Hu1/2rv5zEXZYSFoQAho7sQ+e6OHpgL+XKOGfPDnPkwD60
      WCDO7PsNaQcA3uo1hGfPuD/UwuiGIpNtWucqcjm8gf5piV+LBZHJxG0UzeL9K5dqWbK3Aaqz
      c0EZ1UJhQWTdtWLIkw/1ULmapxCGDB7azbq3PUJPWzbpC1QulxvOqXLzmYq/67m9ESDv30Sx
      PpOzJY//6GOEpRKmu4dCodDkKo3Xmeteeu0a5HvfM+1aursbHngAr7WVqGfue93IM812TJTL
      Ufz2tynv3df0mIWALpUI29trpaBzjPlWn2kxj5nPuVO/F3YB2g/s2/UmW7c9wYkDu9mw+V7O
      ni4wOXGF7U89SUa55lg30xeoHtaYpl6A6vAX3G99m+/RcD+t0SOji5oSLfK5xr4+KxQLQgBh
      8Tr7Dp+gtbOXLfet4vKVkFUdhvOjmk339i8IAaRIsRhYEAKYCykBpFiqWPLZoClSLCZSAkix
      opESQIoVjZQAUqxo3LZUCK01QgjXVuQGjeH5Hgs35qpczOve6LE3M47FOHapjGOx3slc174t
      XqB6aK1RNxgRNMYgbzADsLoH7Y0cP5/rzseDNd8XM59xzHfMNzrHizmOxRrzfN71XOO47QQw
      n0lZCjDGuBSIu8iFe7fNMdy5Md92AkiRYilhCbAJm+QJWaOZmGieZ5PixlEuTjBZmr6b5lJC
      8s51yMTkwmQN3wxuGwFYozl26C3e2nN86jecOH4CgJFLZxkrzVAKqAOOHNzPrv2HATh97BB7
      9u7l4rUZtkWdfTRcPHOSF156jZvpvxaUJtj9yvMcvzRBUBxn/759vPnK8+w+en7uk28SF88O
      8sKLrzJ3tyDL4OApTg2ewgL79u9NvpkYvcpPX/wxw4WIiZEr7Nu3jx8/+13Oj05v2b4gMBFH
      Dx3gjb0Hp3117IR759cunmWi0vyprNUc3fcmb+0/gbUBh/btY+/u1/nJawuXJKj+4A/+4A8W
      7GqzQtDT283o1XH6B1yjpcHD+zl94RLjkwG+nuDMlXFK5QqiMsaRE6eJhE9ne5yfLyQ9ff2M
      XL1If28XBw4eJ9/SSm9fP7nM/J1Zre1dFCau0zfQjwCK4yMcPnKM0xeuMHntIvnuPo7u38fY
      9WscPXyUbEcvbXlXDSa9DD0tgtEoz0BPBwMDA1y7cpUHHnoQXy6OrdDa3klx4jq9A/1IoDTh
      xnvq/GVaRIX9R09y9swF2vyAqG0d7Yxx+XrA4YP7ybf10N3ZRiabJ0MFkV9Fd1c7/f29jIxO
      sGXTeuSi2DiCnt5+RocvM9A/AMDg0f2cPneJsUIZP5zg7LUJSqUAisMcGTyDFVk62vJ153cz
      MjLBQH8ffQMDlK8Ps3rjFtpyC5OWftskgBACOWVxTEaGx7c9Rnd7jvPnLuJ7HuMjI1wcmWTH
      jh2sX9Nbf4HaS7IRRuZ5+MEtHDq4/2ZGE+/yXkNxcgINjIyNsWFdL0PnLoKXRxrDwzueZqC7
      VicgROPeV1FxhMDvIu8tnqE81UAsTk6iLYyOXefq8CiPbt/B+r4swxOBSyK1lnzHKtavv5eN
      97r9fMWUZx67NET7wAa3E+RioNk7r8Dj27fR097CmfPnyfoeYyPDXL5e4Kkdj3PP6p6600UD
      YVpd4cqkZqBj4eoYbhsBGF3hyMHDDJ05xYWrowB4OmT/gUOMTZZZs241FsHqtWsZ6G5lz969
      nL88wtEjR7GADsscOXSQoaEzXBwN6WmzHDx8hHxb1+w3bgZrOXvqOENDQxwfdEU1E+PXEUKh
      pCDfs5ZrR9+g5577QPlkPQlRmSMn3MbbpYlRDh0f5PSJo1wvVDh6dJAHHmjSZWIBce5043gn
      x6+DVEgpWNXTyYG9ezhztUT/qg7ODx7lxOlzAJhKkaHzlwEYvXqR44OnOX70KJVIM3j2Gpvu
      WYT63xgmqnD08CGGhoa4cGUEAN9W2H/gIKMTJdatWYuxsHbdWvo7Wti1dx8Xro5y9MhRwC34
      w4eOMDR0iotXR7l4+gQD6++/lUZw03DbvEDWWky1Z79wHLj6WZUzOZejRArQ1fx/a5Of9ecL
      IRLX2bxdlPG1qnu5K1U3FiGRUiTjqt/x3cS+Z2sNJt6VJhmjkAv6YqbCaJ1sGqOUahyvcHNH
      /dzFc1R9vVJK98x1f1vLNA69kJj1ncfzNe33eD7rj62e7+Z3Yec5dYOmWNFYAm7QFCnuHFIC
      SLGikRJAihWNlABSLFlYazl+aA97DhxDG8PpodMzHusCatODqIePDc7YKQJuayAsRYr54eye
      H/G1nafIVCZRGcsf/dF/omXVOnLhGK/uPc699/Zz/MhJBgdP8sOvf4F9Z69z/5at5H1JJQg4
      e/4Sf/7Fr+Epxcb1zfu4phIgxZJF771bKV06yoXJkN7uVXT39HDvmj6Gr11j30t/y5snhvjr
      P/2vRH4HPV1d3LtxEznPLelLV4b5oz/7Gwb6VrF54/oZ75ESQIoli8Bm+K1/+s9ZxzmOjkBX
      Zxcb1q3m1bf28uD966kEIZsefTvv2vEQA309rL13I3nfBQkqlQqf/sSH+JmnH+fedatnvEdK
      ACmWLEw4yV/92R9zzqxl232reHLrOr70rR+xdX0f1yqKNT3dPPiga4O//d3v54Wv/AWXxp0d
      sGXTBn72XU/y1PZHZr1HGghLsaKRSoAUKxr/P5IIzrEW374IAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ScatterPlot' width='192'>
      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
      K5/m/wd/qUvEkkwqTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='StackedBar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='StackedBar %' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAdT0lEQVR4nO3deXgU54Hn8W9V35e61VLrPtGFBOIGIwTYGJLgOL6wHTvHJHEOb5Ide2ez
      T+aZyWSTZ57Mkd1MZiZPJrt5csxkks3hxPeMwcbcIJkbhLhBoAt0Hy313V317h9gDAg7EESs
      Vr2fP0tvV71v1fureqta/ZYihBBIkgEpiqKo73clJOn9JAMgGZoMgGRoMgCSockASIYmAyAZ
      mgyAZGgyAJKhyQBIhiYDIBma+f2ugHSHiRTjvUfZ8P9+xvp9HQxGdOyuAFV33csDD3+QBaVZ
      2E0KcJB/XPd3tMz9HN/55n3kTGYd+jby9f/+Y84s+yrP/emSyVzzbZMBmMaE0BjvbeZfnvmf
      /OfFJCAQAhga4GLXCc6Mm/nWf3mQ2jw7kCDY18fASARtsiuiRRnu76N/LD7Za75tMgDTmZak
      87V/47VgFmv+9Js8s66OgFUhOtrD0T2v0zQawKaCFhtjNBQkJgR6YpzhgQHMKJitDlweFxZF
      J5WIEQpHSWk6imrB4XbjtJpQFAWhpYhFxonpVlxuOyQihCMxFFsGdqKER8ZJ6AI9FmRgYABQ
      MFudeLzO970DKvK/QacvPRnj8I8/z59v9PCZv/42j8/KwGZWJpS7+Opf8OnvbmMknLpqqYua
      lU/w377+ZeZbuti78Xm+//P1nL0whiNQy31PfYkvPLSEgE0hPtDG+v/zDZ4PLuOLX/4QkS3/
      ys+e34rvgb9hrfYcP37lIL3jV2/RR23jU/zV9z7BzDu9E96DoijK+x1A6Q5SVJXs8krMwR28
      /K8/wb1uFTVFOeTkZON12TCrl8JgzZrB3HldHGk+w7iniJrKbKw4KKkowGOG8PnDNO1txeov
      YUGOIDzQyav/8Hc4K37Bny3MuLK9VKSP/Rt+w/EdxxD5dVQUZpKtVzO7dojwwS4ivnLmlngB
      D6WVOTjfp/1yNXkFmM6ETnT0OC//0z/zu7dOcjFsIbdqPo0rlrFkySLmVBaR6TRzKQa7+Wbj
      V9m3+M/46T8/Sv5Vq4n0tnG2L0JeaQU5bp3O5p/ytW/8lvF13+eVZxdcvgJ8jR/sTJBXUUT1
      sod44sONVGY7MCnAxVf48qe+y4l7/5atX1vxvuyKG5FXgOlOUXH4anno2a8SqHqDpqNtdLaf
      ZsO/72PbjgYe/fRnWbesikyH6T1X48wtZYapk5aDO2gKRkHXcAqF7vHQVaUSJCwuZq58ks88
      sowi58Sh1lQkAzDdKSac2TWs/kQFy0Z6OXv8MIcP72bH1n289MIW6iryWVLm5d0joDF8bh+b
      Xt9Kd9iCxWEHhojq+nXlrORUzKPx7iVp0/lBBmBaE0KgaRpmsxlFNePMKmLOiiLqFtTii43y
      4zdP0z4aZB5eHO+2kuQgx3e+zsYjgk/+10+zsr4QVdnPP7zWTPc1Bc3YbC7cTssdb9dkkt8E
      T2NCS3LklX/iZy83cWZgnIQG6Cli46OMhiIk7XacJvPlTuAl068T7znFyd4ouq6jpVKkYiP0
      9Q8yGDajCkFk8DS7XtjEkUicm755zPDiVxS0s60cG00hdB0tmZz87xv+APIKMI0JPUXXvhf5
      Retetr2Rh89uxaToJMKDdLT3k718LZU5mVw6Zxczs97Jr7dt5Yff7OU/XG4K6xr5yKMLyPb7
      sPY28ZPvXcBrizMwNMRgPHXzAXCVU1dhY9PR/+Dbf3WGHJubwpn38vjTqyi+Y62/OfIKMI2p
      Zit3ffzrPL44m9D5VvY2bWf7rt0cu6BQ/8AXePaTa6jIsl/uBC7u+uxf8PH5HnqONLOzaQ/H
      2geIKAHmr3mA+1eUMNTVzpCtno8++ySL3Q5ueqSvFLD2mWf5yEwT7ft3srNpPyc7h5kK3wvL
      x6DTmRDoepLI2CjBUJRkSkNHwWS24/H5yHDZr3wXACD0BOODAwyH4+iYsLu8+LN82EgQCo4w
      GopjcnjxZ5oJXRgg5AxQFnChpxKERvoZ15z4A35u+FBJizMy0E8wmkRgxu72kRXIwPrH2xsT
      KIqiyABIhiXnBZpkQgjk+SS9yABMslgs9n5XQboFMgCSockASIYmAyAZmgyAZGgyAJKhyQBI
      hiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRoMgCSockASIYmAyAZmgyAZGgyAJKhTalpUYQQ
      pOIjdBw9Tk8swKzlNfhvUC4Z7KC15STdw1GExUnejLnMrcnFfk2cBfHhDo4fO033cARNdZJb
      NY+FM3Pe+SG2SDLW186J1lP0Rs0EKmdTX1GAx6a+XSGSsX5OHTiHe+5dlHnk+WK6mTJHVE+O
      03FoC6++tIG3jp/gyJ42gjcolxo8wZYN2zk+pOPJzMRji3K2eSObDnRx9Y8Ro70n2LltFycH
      kzi8fnyOKKe3vcz6w/1cmtRPEBvu5njLQTrDNjKcKboOHeBY5xCxyzM2CaEzcGwrzZ1xrKb0
      me5PunlT5gpw4cAmDo54KJpZj13p4+im5A1KjXN2bxNt2gzubVhCZa4LJTHKuYxd7Dq4kxOl
      H2V+jhm0Yc4ebqE7HmDR3cuoyXNj0sbp9m/kxTe2cHLGk9R5Ygz1XGBgxEv92pVUuZJ0NK3n
      rc6LzMjPxO42o0fPsmdPlJoHF5OfRvNdSjdvylwB/BWLabhrKQvn1lKS4+aGM0yOdnDkvJkZ
      c2spC7gwKwomq4+S6rmUe4c5evbS2V0b6ubMEORUzWRGrhuLqqBaMiiavYpZ7qMcOBuEVJTx
      8TAJZz55Xhsmi5uSYj+jwXFi8SSg071nK+O1q1lc6Lr5SaCktDJlAuAKFJHvd2N+jxolh/vp
      cwYoynJhfXtCJ0XBaveQl+Mn1NNPGAiPjhCzOQhk+XBcNXRRzF4qZvjp7OxD1wW60NFNJt4u
      YjZb0HQNXQi03mY2ds/kAw1FOKfMXpIm25QZAt2MSGicuMWO02RCueqUrJjM2BxOzGdHCAKW
      aAQdgdVque7MrZDpzSR+dICgJR+71YY1NE5YB48KY8FRXI58LOYoh984T/WaR7Ccf4MfvtxE
      dyqL2SvuY+3Kmfjeezp9KY2kVQCEEKCAojBhSKJcKoB4u5wAZUL3B0VVELqOUFxk5/ixnDtM
      y5FyHEVj7D4YJG92PWrnW5wsvpuHHUf51Q/PUff0X/IJtYs9u/ewea+LB5cWY1EgkUiQSqWu
      2YYQgvHxa16IdcXPDvyI/Rd2T9buuCOynAH+es3/uqXPdIye5zs7vnWHajR5nl7yDHPy5l+z
      LK0CoCgKCLjcv6/p3gJAvdTllcsJEdfNXywAoQsU1YSiqGQU13FXIsqmDT/hO31WalZ9mA+W
      xNi70cri+7MJHX6JkcbHWFnkAlFMVVkvR86cpWdRMSUWsFqtWK3vzG4phCAWi+FyuW7cABWS
      2o1u7qcOTaTweDy39BlH3D7l2wVgs9kmtC2tAuD0ZOBIRohqGkJwZRgktBTxaISUvwwvIJwu
      VBIkEsnrgiIYCY5gy8nGC6BYyaps4IlnGngCEKkQJ7e+hnXuCorcDtoudlNQn3fpo4oZq82C
      yRQkFoMb36VL6Satbu8sgXwKYkN0D4WI65fP7kKQiI3T2z+CpyAXF+D2Z+NKxRkcGiWqvXMV
      EKlR2s6NUlaaO7HhIsXY+QO0REqoLczEblGw2e3E4/Er29F1HV1XkTOqTh/pdSjdhdSVpzjX
      cpKOgTApIUglRuk83UJnKMC86ksdW/XlUZkp6D97ira+EEldoCfH6GrdxqnYPBbXeCesOjnW
      xcEjA+RXFJOV4UAF8qtrGT3RwkBUR4uHGBkJknIE8Nn/6C2X7pApMgQapW3vCS5GE+joRIId
      dAfDmLdvpxOw+PKpKC8nN8ND1V3L6di4h/1v7eBipguRHKW3a5zAwtXUZF3Os8lP1fx59DUf
      4OieHfT63Fi0UTrOBqlY+wiV172gViTH6DzSSq+jgGWFAZyX94qrqoH6vVvYviOOnwhjMYW8
      2RX45VOgaWOKBCBFNBhkJBy7/G8KPmYs9MHICCOAzeQlfnkoo2ZWs2qtnaNHTtI9PIKwuKhq
      aGBOTc41w3JrTjWNd9s4cewMXUOjREwOau55kAUz/TcY/mjgKWVecQE5XtuVewbFVkrjhxs4
      1NLGiO6iuHYWs2b43uONilK6mSIByGb2B9Yy+yZLW7wlzF9Rwvz3LKVgyyxj3vIy5v2e9SnW
      TCrmZU5crqi48utYnl93kzWT0k163QNI0iSTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkA
      ydBkACRDkwGQDE0GQDI0GQDJ0GQAJEOTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkAydBk
      ACRDkwGQDE0GQDI0GQDJ0GQAJEOTAZAMTQZAMjQZAMnQZAAkQ5MBkAxNBkAyNBkAydBkACRD
      kwGQDG2KvCLpFogkY33ddPcNE07oqBYXWYWlFAdc1727S5AMDXKhu4ehUByh2PDml1FekPFO
      o4VGJNjPha4eggmVjNwSinN9OCyXzwtCoCXHuHiuD3tpFQHH9e+nl9JdegVAxOk/fZh9R84z
      ntQRCLRkgtTJDuY0NDCn1HelQYmRLloP7uNUbxRdMaGKBNHWM/SvXE3DDB8qgkSojzOHd3O0
      IwKqhna2j+iyu6gt9GFVQaAz3LaLzbt1GvMrZQCmobQKgDbcRvPuEySL5rPqrpnkuMzEhtvZ
      t2MTuzer+B77IDMyFNDH6Dyyl5YulboV9zGvzI8lOcDxHa/yxmtNFH3ufkodCUa6O+jsNVH3
      oXXM9sU4tfUNjp27QGGWh2ynCRG/yOHmC2Qte5wKrxwtTkdpdVRH2o/T7yhh4bxqAm4bimLC
      4S9jfkMDuYnjtLSPAqCNXuDEhTjZ1XOoK/FjNymY7DnMWrmW6uR+9p4PgRYlODZO0lZMaa4T
      i91PVYWf4ZEg0VgS0Ok/so0LWY2sqM5Mrx0l3bS0Oq7h8DgObwZOq/WdiismnO58ygud9HT2
      EAGiw4OMm53k5GbhtrwzbFGsedRU2jl3vh9d00hpGprVyttFbDY7yVQSTdfRh1rZdtrH0rtr
      8MkXA09baTUEstsdjHYNEYrH0T3OKyFQrVa8mVmYzgwxBqiRMLqq4LDZrku4QpY/i8jpAULm
      LKwWC5ZIhKgOHhXCoXEctmzMpjindh7Hu+gD5Izu5YWXWujTvFTOX0bD/DI8MhDTRloFwF81
      h+LDG9myPQPLmvkUZ9ggGWH4Ygen2nqIJ/wkAYuugxAoyrU3rQpgNpvREwlSqgu/34u57Qwn
      26rJyA9xqHWE7NIaLAOHaLXPYXVeD5t+0oL73g+wWh3g7Lk9NFsdrJ6TixlIJBLoun7NNnRd
      JxwO37D+mpa6MztmEgldvGv93000FrtDtZlc8Xh8QtvSKgAWXxVrHlQ4sLOZ577/OuNxDasn
      i6LymRRkZuMIOrAD2s2sTDHhK57J3NAoW177AZuHzRQvupsPVigc2RSl6t4SlFPPcb78Hp6d
      U4GNAGo8xPEzZ+mvy6XADBaLBSHENauNxWLY7fYbbtJkmvqXDkVRcDgct/QZW9h2h2ozuaxW
      y4S2pVUAUCy4cmtofGgGS1IpdAGKoqImx2nbt5EzwoMLiNvtKGoSTdMQXDrzAwhgPBTC7M8k
      AwXV4qZw9j08Wd1ISlcwWUwM7HmBSFUDFX4XXVvPkF/7aRxmBYQdl8uJRQQJxwD3pc5y9VVG
      XL7qqOq73VqlwWNUhfeo/42pahq0i8t95bq2pdVNMFxqhNlqw+F04XK5cDjsiFSEvoFhSqvK
      cAJefza2ZIqh0SCJq87QQo/R0XGBwuL8S8lXFFSTBZvDictpQx08yPbeQurLArit6g36q0AI
      wXUnfSmNpVkAkkRCYaLxFLoQCKGTig7TdWIPZ8Zqqa9yA6D6cymzR+g5287F0QSaEAgtztiF
      Zo5017BodtaENWvxfg7ubie3soSAz4UKFM6opqftDJGUQE9FCYcipNRM3Lc2QpCmsPQaAjHM
      yeZWxhxZ5OZ5sIoUIxeOceR0nDn3r6TMcrmYOZfZi+ro3HyYPXsVQmU52BIX2Lf5MBlrP8Uc
      z7VrFVqMvqMHOGvOp6EoF/fl9XhmL2XGzh1sbTFToQ5yrieIq2Y+OWm216R3l2aHMpvqWbns
      2X+EpqNB4roJT2E1jes+Qk3g2hsxe9F87ltrZ3fzQZo3H0IzeyhtfJI1i3MnXPZEMsjAuIuq
      ygpy/Y4rIx/VUcsH142xZftWtmleKucto6EukG47TXoPaXYsTbgL61ldWH8TZVUcubNY9cgs
      Vv2+kvZc5q7KnbBcUVS85Q08Ut7wB9VWmvrS7B5AkiaXDIBkaDIAkqHJAEiGJgMgGZoMgGRo
      MgCSockASIYmAyAZmgyAZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRoMgCS
      ockASIYmAyAZmgyAZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRoMgCSockA
      SIYmAyAZmgyAZGhp9ookQOgkYyHGxyPENR0wYbG78GS4sJmufq+pQE9EGRsPEUtoCMWEzeXF
      57G9k3qhk4xHGB8LEdcUbO4MPC47lrffeysEuh4nNBrBnJGJ05Ie78OVbl6aBUAnOtzJscP7
      aT3ZzWAkiaJa8eaUULtoKfMq83Bf7qSpyAidx/fw1sGz9IzFQLGQUTSXe1YvpSrbgYIgFR/h
      /OFmmvaeYSiu4C1fwD0rF1EecGFWQCAY697H+vWdzProx5ibJQMw3aRXAOJDtG7bzCGtjLsf
      X0tlwIUaH6f98BY2b91Awvo491R4UPUova272Hw4yIzlj/JwTR62+AV2v/ocL75q5nOfWEHA
      mmK0q43T7VFmPvh5FuSEadmwmSNn8sjOqCLTriKSw5xoakEsepz6LDlanI7S66gOt9Fy0UP9
      XfOoCLgxKwqqPYPS+uUsKklx4ngXcUAPd3OsbZSsmkUsqMrHZVYxu4pZ9tBDzOjdwe6uGOgR
      RkbGSFrKqSrNwObMZ3adn8GhYcLRJKAz2raTE9pC1syb+GpVaXpIr+NqMmFSdDQNxJWFAoQA
      VFT1UnNiA/0MqW5yC3LIsL4zbFHsZdTV6Jxp60dPpUimkqTsDmyXizidLuKJBClNQx87z+5D
      MWavWUiuBWmaSq8A+MqYV6xx9vARzg+ESQmBFh+j49QhTo54mF1XgB2IRMIIs4rLYcd0zQpU
      cgK5BHv7iZpMWExmzPE4ictpikYjWC0WTGqSrv2HiFSuoJoz7NjwCq+8tol9p3qJ6H/8Zkt3
      TnrdA1izqWu8i9TBFt5a/zt2m0woehJhzaVq4XLmlGSgAKlUCiHElSvC2xTAarWiR6PETU58
      vgzM59s5112DJzvCidPDZPnLsARPsidczNIFUfY8v5vxkiqyTWG6T+wjYVrO0spMTJe3o2na
      NdsQQhCLxW5YfV3Xbrh8Knmv+r+beDxxh2ozuRLJxIS2pVcASDHe182FMRM5ZdUEMuyoyQjD
      A71cPN9BUUk+bvdNXtQUC76iCqpHBjnw5q85EAdnThVLyq207R8ge24j7o71tFpn8ZkVS8hU
      hjmxbzdnjrcxXL6IgAkURcFkuvYao2nahGVXNqmkw1OkiW36fW61/PvFpJom1DWtAhDrOsjG
      g4MUzV3E3OpCMmxmFD1FeLCd1n0H2LkrkwfW1mK1WlHUJNp1Z1wBRKIRTN4MXChYnH7K5zSS
      kT9EKKHi8mehn9vKKX8Ny/My6Dt4kszaR8h2qCDcZPp8WHsHCcYg4Jp44IUQKIqCxXLjmwZF
      mfojTkXhXev/bszmNAmAyTShbVP/iFxlqOs0Y/Ysyory8dotqIqCYrLgChRSUu5DbztFTwgy
      vJmYUzpjoTDJq1cgNC5evEB2Xi5WAEXF6vSRX1pBVVU5eUonezudVFbk47WrJGIxbDbbpc8q
      CqqqABra1B/JSDcprQJgtdoJB8eIJhNXPQUCkgkifUOMmN3Y7WAK5JAvRrnY3sNI9J2SeqSV
      luM5zKsPMGEwoo9xrPkY1oISCrI9mBSFvIIiLvb0Xvq7SJGIJ9F0Jw7HHW6o9EeTVgHInr2E
      ecpZXn1lC4fbh4jGYkRG+2h9awMbDvRTsnQhJSZQLEUsWDSDaFsz2w+cYiAUJTTQyov/90VC
      dz/M0qzrhy46o6f2cCjhp6KsEJ9VRQEyFzXgb36Z7Z0hghc7ONPeiV5WTX5aDRyl95JWh1Kx
      l7Lm05+npPlNNv36+zw/FgfVQaBmIWs+8RCzCpyXz+wK7soVPPGQg42v/yf/smGYlMVH9Yqn
      eHp16YRGi+gFjp0Ik19cT0GOm7fvVU3uRTzy5DAv/PJ/symVRf2K+1i7uBD5L0HTR1oFAACz
      l+qVj1G98rHfU1DFVbyER76whEd+X0lnMY3riicsVxSVrNq1PF279g+urjS1pdUQSJImmwyA
      ZGgyAJKhyQBIhiYDIBmaDIBkaDIAkqHJAEiGJgMgGZoMgGRoMgCSockASIYmAyAZmgyAZGgy
      AJKhyQBIhiYDIBmaDIBkaLf/k0ihkQiN0Ns3QDAaI5lUMZlUVJefksJcvI70+9WlZBx/YO8U
      pGIjnD+0k02bmjnePUAwFCOhpdB1BUVRUMw23C4PgfLZ3L32ARrrC/HILEhTzC13SaEnGTy5
      iX//0S9pOjeCZglQM28pyxdVUpDp5u15t8L95zl5rIld21/k0O7tvFS3jMc+8yesqvGl4S/x
      penqlvqiEOMc+Ldv8LcvnsZeuYrPfO0hFlf4cdkd2O0WTKp6ZcIpoc2j4d61PPFUmP62Jl7+
      5fP849da2f/Y5/jcurvIsd2B1kjSLbq1k/Hen/KXr0ZZ9+c/4JNLC3FazKiqMnGWNQCTCbPV
      jsPlIyvnUSrq72bt9t/ykzdf4uX8PJ6+p3RSGiBJt+PWAlB8H9//+TPM9F6eWU0IhK6jwaV5
      Oq+b/VgI/dK7KxQztow8Fnzki/xNY5Bkyjo5tZek23RLAVAKaph59YJkhMGeTtrHLRQXFZHn
      s19TPjXURktnCH/JbGZkW0Cx4vcHJqHakjQ5bu97gLFOmp77Dl/61o9489jAhD8nW37Bl5/9
      H3z3zc7b2owk3Sl38IswnUg4iq7rDI+O3bnNSNJtuPUnknqKUHcrTSf6YfwixzpHIaRx6uAu
      3gj53ymnRTm24RAmk4Oy4pxJrLIkTZ5bD4CWYOjgC3z7e00gNJLxGGgqW3/bTpP5qguKliSh
      eJi9ah2PLM6fxCpL0uS59QCoFny1q3nqqWqI9HNs73Y2X3CxeHkjC0q9VxfE6syiculKFuTK
      fzmSpqZbD4DJgrdmFZ+qAUY72JmRZPiUj/sefpQP1cuhjpRebu+/Ety5zFn9cb6yWMeToTI2
      duObXdXqwG2Xb5uWpp7bC4DZTCrYyVu/+Q27zoXQxA3KWJwUfOhZ/v7x2tvalCTdCbcXgFAP
      R5vW88LrR9ALKqgsy8V5/RszzXYCLnn2l6am2wtAPMzoYD/92XN56rNf5GMry5jQ1RUF1Wy/
      0acl6X13ewFwuPBmBwiYoljsDlwuN9Y7+AK5ruZf8bs399MdvHa5EDpayk7J3LV87PP3UAgI
      LcHIubd4fcNOWjpH0MxeKhof5sm1s/BZTCgIhBahu3UXr7+2ndNBC+WN9/PQqvkUeCwoyqX1
      RoZaef1Xuyl44vM05KbHC6Glm3ebAcihfOZc6te/Qmd7J32JMgputEZFxaTefjKKl32cryz7
      +LULhSAe7KZ5/Yu055eSAyBSDB3bzAvb2slf9km+/qUS7LE2Nv7s5/zgBcFXHp+LU9UJdp6k
      5WQ/FY9+lT8pHGP3K9vYdyKLVfNn4LUqoEU5t3ML/fWP8Yjs/NPS7QUgmcTmdJNZAAf37WRr
      joVK/3XP/FUTjvwa5pf6bmtT70aIJMGeo5wbymHJfeVYABHr5sixPjJrl7NsdikeiwKWKtY+
      9TiD39lAU08dHyiIMjQ4iqZWM6s6E7uaycJ5mTzXPkgoUozXaiHS08yei3Xcf3+x/PH0NPX/
      AQR6kc6bJ0AgAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
